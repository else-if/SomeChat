<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebSocket4Net.0.12.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession">
            <summary>Shim type of SuperSocket.ClientEngine.AsyncTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.#ctor(SuperSocket.ClientEngine.AsyncTcpSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.Bind(SuperSocket.ClientEngine.IBufferSetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.Bind(SuperSocket.ClientEngine.IClientSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.BeginReceive">
            <summary>Sets the shim of AsyncTcpSession.BeginReceive()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.ConstructorEndPoint">
            <summary>Sets the shim of AsyncTcpSession.AsyncTcpSession(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.ConstructorEndPointInt32">
            <summary>Sets the shim of AsyncTcpSession.AsyncTcpSession(EndPoint remoteEndPoint, Int32 receiveBufferSize)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.OnClosed">
            <summary>Sets the shim of AsyncTcpSession.OnClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.ProcessReceiveSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.ProcessReceive(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the shim of AsyncTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.Sending_CompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.Sending_Completed(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.SetBufferArraySegmentOfByte">
            <summary>Sets the shim of AsyncTcpSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.StartReceive">
            <summary>Sets the shim of AsyncTcpSession.StartReceive()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.BeginReceive">
            <summary>Sets the shim of AsyncTcpSession.BeginReceive()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.OnClosed">
            <summary>Sets the shim of AsyncTcpSession.OnClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.ProcessReceiveSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.ProcessReceive(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the shim of AsyncTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.Sending_CompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.Sending_Completed(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.SetBufferArraySegmentOfByte">
            <summary>Sets the shim of AsyncTcpSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of AsyncTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimAsyncTcpSession.AllInstances.StartReceive">
            <summary>Sets the shim of AsyncTcpSession.StartReceive()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimClientSession">
            <summary>Shim type of SuperSocket.ClientEngine.ClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimClientSession.#ctor(SuperSocket.ClientEngine.ClientSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimClientSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimClientSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimClientSession.Bind(SuperSocket.ClientEngine.IBufferSetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimClientSession.Bind(SuperSocket.ClientEngine.IClientSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.BufferGet">
            <summary>Sets the shim of ClientSession.get_Buffer()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.BufferSetArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.set_Buffer(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ClientGet">
            <summary>Sets the shim of ClientSession.get_Client()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ClientSetSocket">
            <summary>Sets the shim of ClientSession.set_Client(Socket value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ClosedAddEventHandler">
            <summary>Sets the shim of ClientSession.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ClosedRemoveEventHandler">
            <summary>Sets the shim of ClientSession.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ConnectedAddEventHandler">
            <summary>Sets the shim of ClientSession.add_Connected(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ConnectedRemoveEventHandler">
            <summary>Sets the shim of ClientSession.remove_Connected(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.Constructor">
            <summary>Sets the shim of ClientSession.ClientSession()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ConstructorEndPoint">
            <summary>Sets the shim of ClientSession.ClientSession(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.DataReceivedAddEventHandlerOfDataEventArgs">
            <summary>Sets the shim of ClientSession.add_DataReceived(EventHandler`1&lt;DataEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.DataReceivedRemoveEventHandlerOfDataEventArgs">
            <summary>Sets the shim of ClientSession.remove_DataReceived(EventHandler`1&lt;DataEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of ClientSession.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of ClientSession.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.IsConnectedGet">
            <summary>Sets the shim of ClientSession.get_IsConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.IsConnectedSetBoolean">
            <summary>Sets the shim of ClientSession.set_IsConnected(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.NoDeplayGet">
            <summary>Sets the shim of ClientSession.get_NoDeplay()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.NoDeplaySetBoolean">
            <summary>Sets the shim of ClientSession.set_NoDeplay(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.OnClosed">
            <summary>Sets the shim of ClientSession.OnClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.OnConnected">
            <summary>Sets the shim of ClientSession.OnConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the shim of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.OnErrorException">
            <summary>Sets the shim of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ProxyGet">
            <summary>Sets the shim of ClientSession.get_Proxy()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ProxySetIProxyConnector">
            <summary>Sets the shim of ClientSession.set_Proxy(IProxyConnector value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ReceiveBufferSizeGet">
            <summary>Sets the shim of ClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of ClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.RemoteEndPointGet">
            <summary>Sets the shim of ClientSession.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.RemoteEndPointSetEndPoint">
            <summary>Sets the shim of ClientSession.set_RemoteEndPoint(EndPoint value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SendArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.Send(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SendByteArrayInt32Int32">
            <summary>Sets the shim of ClientSession.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SendIListOfArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SendingQueueSizeGet">
            <summary>Sets the shim of ClientSession.get_SendingQueueSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SendingQueueSizeSetInt32">
            <summary>Sets the shim of ClientSession.set_SendingQueueSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SetBufferArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.SuperSocketClientEngineIBufferSetterSetBufferArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.SuperSocket.ClientEngine.IBufferSetter.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.BufferGet">
            <summary>Sets the shim of ClientSession.get_Buffer()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.BufferSetArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.set_Buffer(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ClientGet">
            <summary>Sets the shim of ClientSession.get_Client()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ClientSetSocket">
            <summary>Sets the shim of ClientSession.set_Client(Socket value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ClosedAddEventHandler">
            <summary>Sets the shim of ClientSession.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ClosedRemoveEventHandler">
            <summary>Sets the shim of ClientSession.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ConnectedAddEventHandler">
            <summary>Sets the shim of ClientSession.add_Connected(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ConnectedRemoveEventHandler">
            <summary>Sets the shim of ClientSession.remove_Connected(EventHandler value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.DataReceivedAddEventHandlerOfDataEventArgs">
            <summary>Sets the shim of ClientSession.add_DataReceived(EventHandler`1&lt;DataEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.DataReceivedRemoveEventHandlerOfDataEventArgs">
            <summary>Sets the shim of ClientSession.remove_DataReceived(EventHandler`1&lt;DataEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of ClientSession.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of ClientSession.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.IsConnectedGet">
            <summary>Sets the shim of ClientSession.get_IsConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.IsConnectedSetBoolean">
            <summary>Sets the shim of ClientSession.set_IsConnected(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.NoDeplayGet">
            <summary>Sets the shim of ClientSession.get_NoDeplay()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.NoDeplaySetBoolean">
            <summary>Sets the shim of ClientSession.set_NoDeplay(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.OnClosed">
            <summary>Sets the shim of ClientSession.OnClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.OnConnected">
            <summary>Sets the shim of ClientSession.OnConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the shim of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.OnErrorException">
            <summary>Sets the shim of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ProxyGet">
            <summary>Sets the shim of ClientSession.get_Proxy()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ProxySetIProxyConnector">
            <summary>Sets the shim of ClientSession.set_Proxy(IProxyConnector value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of ClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of ClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.RemoteEndPointGet">
            <summary>Sets the shim of ClientSession.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.RemoteEndPointSetEndPoint">
            <summary>Sets the shim of ClientSession.set_RemoteEndPoint(EndPoint value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SendArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.Send(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SendByteArrayInt32Int32">
            <summary>Sets the shim of ClientSession.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SendIListOfArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SendingQueueSizeGet">
            <summary>Sets the shim of ClientSession.get_SendingQueueSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SendingQueueSizeSetInt32">
            <summary>Sets the shim of ClientSession.set_SendingQueueSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SetBufferArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimClientSession.AllInstances.SuperSocketClientEngineIBufferSetterSetBufferArraySegmentOfByte">
            <summary>Sets the shim of ClientSession.SuperSocket.ClientEngine.IBufferSetter.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1">
            <summary>Shim type of SuperSocket.ClientEngine.ConcurrentBatchQueue`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.#ctor(SuperSocket.ClientEngine.ConcurrentBatchQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.Bind(SuperSocket.ClientEngine.IBatchQueue{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.Constructor">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.ConstructorInt32">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1(Int32 capacity)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.ConstructorInt32FuncOfT0Boolean">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1(Int32 capacity, Func`2&lt;!0,Boolean&gt; nullValidator)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.ConstructorT0Array">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1(!0[] array)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.ConstructorT0ArrayFuncOfT0Boolean">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1(!0[] array, Func`2&lt;!0,Boolean&gt; nullValidator)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.CountGet">
            <summary>Sets the shim of ConcurrentBatchQueue`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.EnqueueIListOfT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.Enqueue(IList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.EnqueueT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.EnsureNotRebuild">
            <summary>Sets the shim of ConcurrentBatchQueue`1.EnsureNotRebuild()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.IsEmptyGet">
            <summary>Sets the shim of ConcurrentBatchQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.StaticConstructor">
            <summary>Sets the shim of ConcurrentBatchQueue`1.ConcurrentBatchQueue`1()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.TryDequeueIListOfT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryDequeue(IList`1&lt;!0&gt; outputItems)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.TryEnqueueIListOfT0BooleanOut">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryEnqueue(IList`1&lt;!0&gt; items, Boolean&amp; full)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.TryEnqueueT0BooleanOut">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryEnqueue(!0 item, Boolean&amp; full)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1._ctorb__0T0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.&lt;.ctor&gt;b__0(!0 t)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.CountGet">
            <summary>Sets the shim of ConcurrentBatchQueue`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.EnqueueIListOfT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.Enqueue(IList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.EnsureNotRebuild">
            <summary>Sets the shim of ConcurrentBatchQueue`1.EnsureNotRebuild()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.IsEmptyGet">
            <summary>Sets the shim of ConcurrentBatchQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.TryDequeueIListOfT0">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryDequeue(IList`1&lt;!0&gt; outputItems)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.TryEnqueueIListOfT0BooleanOut">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryEnqueue(IList`1&lt;!0&gt; items, Boolean&amp; full)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConcurrentBatchQueue`1.AllInstances.TryEnqueueT0BooleanOut">
            <summary>Sets the shim of ConcurrentBatchQueue`1.TryEnqueue(!0 item, Boolean&amp; full)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension">
            <summary>Shim type of SuperSocket.ClientEngine.ConnectAsyncExtension</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.ClearSocketAsyncEventArgsSocketAsyncEventArgs">
            <summary>Sets the shim of ConnectAsyncExtension.ClearSocketAsyncEventArgs(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.ConnectAsyncEndPointConnectedCallbackObject">
            <summary>Sets the shim of ConnectAsyncExtension.ConnectAsync(EndPoint remoteEndPoint, ConnectedCallback callback, Object state)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.ConnectAsyncInternalEndPointConnectedCallbackObject">
            <summary>Sets the shim of ConnectAsyncExtension.ConnectAsyncInternal(EndPoint remoteEndPoint, ConnectedCallback callback, Object state)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.CreateSocketAsyncEventArgsEndPointConnectedCallbackObject">
            <summary>Sets the shim of ConnectAsyncExtension.CreateSocketAsyncEventArgs(EndPoint remoteEndPoint, ConnectedCallback callback, Object state)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.OnGetHostAddressesIAsyncResult">
            <summary>Sets the shim of ConnectAsyncExtension.OnGetHostAddresses(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.SocketAsyncEventCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of ConnectAsyncExtension.SocketAsyncEventCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.SocketConnectCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of ConnectAsyncExtension.SocketConnectCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimConnectAsyncExtension.StaticConstructor">
            <summary>Sets the shim of ConnectAsyncExtension.ConnectAsyncExtension()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs">
            <summary>Shim type of SuperSocket.ClientEngine.DataEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.#ctor(SuperSocket.ClientEngine.DataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.Constructor">
            <summary>Sets the shim of DataEventArgs.DataEventArgs()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.DataGet">
            <summary>Sets the shim of DataEventArgs.get_Data()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.DataSetByteArray">
            <summary>Sets the shim of DataEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.LengthGet">
            <summary>Sets the shim of DataEventArgs.get_Length()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.LengthSetInt32">
            <summary>Sets the shim of DataEventArgs.set_Length(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.OffsetGet">
            <summary>Sets the shim of DataEventArgs.get_Offset()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.OffsetSetInt32">
            <summary>Sets the shim of DataEventArgs.set_Offset(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of DataEventArgs.get_Data()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.DataSetByteArray">
            <summary>Sets the shim of DataEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.LengthGet">
            <summary>Sets the shim of DataEventArgs.get_Length()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.LengthSetInt32">
            <summary>Sets the shim of DataEventArgs.set_Length(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.OffsetGet">
            <summary>Sets the shim of DataEventArgs.get_Offset()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimDataEventArgs.AllInstances.OffsetSetInt32">
            <summary>Sets the shim of DataEventArgs.set_Offset(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs">
            <summary>Shim type of SuperSocket.ClientEngine.ErrorEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.#ctor(SuperSocket.ClientEngine.ErrorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.ConstructorException">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(Exception exception)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.ExceptionSetException">
            <summary>Sets the shim of ErrorEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimErrorEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ErrorEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimExtensions">
            <summary>Shim type of SuperSocket.ClientEngine.Extensions</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.CloneRangeOf1M0ArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Int32,``0[]})">
            <summary>Sets the shim of Extensions.CloneRange(!!0[] source, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.EndsWithOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Boolean})">
            <summary>Sets the shim of Extensions.EndsWith(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.EndsWithOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Boolean})">
            <summary>Sets the shim of Extensions.EndsWith(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.IndexOfOf1IListOfM0M0Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0,System.Int32,System.Int32,System.Int32})">
            <summary>Sets the shim of Extensions.IndexOf(IList`1&lt;!!0&gt; source, !!0 target, Int32 pos, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.RandomOrderOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[]})">
            <summary>Sets the shim of Extensions.RandomOrder(!!0[] source)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.SearchMarkOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Nullable{System.Int32}})">
            <summary>Sets the shim of Extensions.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.SearchMarkOf1IListOfM0Int32Int32M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Int32,System.Nullable{System.Int32}})">
            <summary>Sets the shim of Extensions.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark, Int32 matched)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.SearchMarkOf1IListOfM0Int32Int32SearchMarkStateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,SuperSocket.ClientEngine.SearchMarkState{``0},System.Int32})">
            <summary>Sets the shim of Extensions.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, SearchMarkState`1&lt;!!0&gt; searchState)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.SearchMarkOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Nullable{System.Int32}})">
            <summary>Sets the shim of Extensions.SearchMark(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.StartsWithOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Int32})">
            <summary>Sets the shim of Extensions.StartsWith(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimExtensions.StartsWithOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Int32})">
            <summary>Sets the shim of Extensions.StartsWith(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimExtensions.GetValueNameValueCollectionString">
            <summary>Sets the shim of Extensions.GetValue(NameValueCollection collection, String key)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimExtensions.GetValueNameValueCollectionStringString">
            <summary>Sets the shim of Extensions.GetValue(NameValueCollection collection, String key, String defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimExtensions.StaticConstructor">
            <summary>Sets the shim of Extensions.Extensions()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimPosList`1">
            <summary>Shim type of SuperSocket.ClientEngine.PosList`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.#ctor(SuperSocket.ClientEngine.PosList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(SuperSocket.ClientEngine.IPosList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.Constructor">
            <summary>Sets the shim of PosList`1.PosList`1()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.PositionGet">
            <summary>Sets the shim of PosList`1.get_Position()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.PositionSetInt32">
            <summary>Sets the shim of PosList`1.set_Position(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimPosList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.AllInstances.PositionGet">
            <summary>Sets the shim of PosList`1.get_Position()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimPosList`1.AllInstances.PositionSetInt32">
            <summary>Sets the shim of PosList`1.set_Position(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs">
            <summary>Shim type of SuperSocket.ClientEngine.ProxyEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.#ctor(SuperSocket.ClientEngine.ProxyEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ConnectedGet">
            <summary>Sets the shim of ProxyEventArgs.get_Connected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ConnectedSetBoolean">
            <summary>Sets the shim of ProxyEventArgs.set_Connected(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ConstructorBooleanSocketException">
            <summary>Sets the shim of ProxyEventArgs.ProxyEventArgs(Boolean connected, Socket socket, Exception exception)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ConstructorException">
            <summary>Sets the shim of ProxyEventArgs.ProxyEventArgs(Exception exception)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ConstructorSocket">
            <summary>Sets the shim of ProxyEventArgs.ProxyEventArgs(Socket socket)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ExceptionGet">
            <summary>Sets the shim of ProxyEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.ExceptionSetException">
            <summary>Sets the shim of ProxyEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.SocketGet">
            <summary>Sets the shim of ProxyEventArgs.get_Socket()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.SocketSetSocket">
            <summary>Sets the shim of ProxyEventArgs.set_Socket(Socket value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.ConnectedGet">
            <summary>Sets the shim of ProxyEventArgs.get_Connected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.ConnectedSetBoolean">
            <summary>Sets the shim of ProxyEventArgs.set_Connected(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ProxyEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ProxyEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.SocketGet">
            <summary>Sets the shim of ProxyEventArgs.get_Socket()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimProxyEventArgs.AllInstances.SocketSetSocket">
            <summary>Sets the shim of ProxyEventArgs.set_Socket(Socket value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1">
            <summary>Shim type of SuperSocket.ClientEngine.SearchMarkState`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.#ctor(SuperSocket.ClientEngine.SearchMarkState{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.ConstructorT0Array">
            <summary>Sets the shim of SearchMarkState`1.SearchMarkState`1(!0[] mark)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.MarkGet">
            <summary>Sets the shim of SearchMarkState`1.get_Mark()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.MarkSetT0Array">
            <summary>Sets the shim of SearchMarkState`1.set_Mark(!0[] value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.MatchedGet">
            <summary>Sets the shim of SearchMarkState`1.get_Matched()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.MatchedSetInt32">
            <summary>Sets the shim of SearchMarkState`1.set_Matched(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.AllInstances.MarkGet">
            <summary>Sets the shim of SearchMarkState`1.get_Mark()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.AllInstances.MarkSetT0Array">
            <summary>Sets the shim of SearchMarkState`1.set_Mark(!0[] value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.AllInstances.MatchedGet">
            <summary>Sets the shim of SearchMarkState`1.get_Matched()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSearchMarkState`1.AllInstances.MatchedSetInt32">
            <summary>Sets the shim of SearchMarkState`1.set_Matched(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession">
            <summary>Shim type of SuperSocket.ClientEngine.SslStreamTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.#ctor(SuperSocket.ClientEngine.SslStreamTcpSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.Bind(SuperSocket.ClientEngine.IBufferSetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.Bind(SuperSocket.ClientEngine.IClientSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of SslStreamTcpSession.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of SslStreamTcpSession.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.BeginRead">
            <summary>Sets the shim of SslStreamTcpSession.BeginRead()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.Close">
            <summary>Sets the shim of SslStreamTcpSession.Close()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.ConstructorEndPoint">
            <summary>Sets the shim of SslStreamTcpSession.SslStreamTcpSession(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.ConstructorEndPointInt32">
            <summary>Sets the shim of SslStreamTcpSession.SslStreamTcpSession(EndPoint remoteEndPoint, Int32 receiveBufferSize)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.IsIgnorableExceptionException">
            <summary>Sets the shim of SslStreamTcpSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.OnAuthenticatedIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnAuthenticated(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.OnDataReadIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnDataRead(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the shim of SslStreamTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.OnWriteCompleteIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnWriteComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the shim of SslStreamTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of SslStreamTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.ValidateRemoteCertificateObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>Sets the shim of SslStreamTcpSession.ValidateRemoteCertificate(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of SslStreamTcpSession.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of SslStreamTcpSession.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.BeginRead">
            <summary>Sets the shim of SslStreamTcpSession.BeginRead()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.Close">
            <summary>Sets the shim of SslStreamTcpSession.Close()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.IsIgnorableExceptionException">
            <summary>Sets the shim of SslStreamTcpSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.OnAuthenticatedIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnAuthenticated(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.OnDataReadIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnDataRead(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the shim of SslStreamTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.OnWriteCompleteIAsyncResult">
            <summary>Sets the shim of SslStreamTcpSession.OnWriteComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the shim of SslStreamTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the shim of SslStreamTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimSslStreamTcpSession.AllInstances.ValidateRemoteCertificateObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>Sets the shim of SslStreamTcpSession.ValidateRemoteCertificate(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession">
            <summary>Shim type of SuperSocket.ClientEngine.TcpClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.#ctor(SuperSocket.ClientEngine.TcpClientSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Bind(SuperSocket.ClientEngine.IBufferSetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Bind(SuperSocket.ClientEngine.IClientSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Close">
            <summary>Sets the shim of TcpClientSession.Close()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Connect">
            <summary>Sets the shim of TcpClientSession.Connect()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.ConstructorEndPoint">
            <summary>Sets the shim of TcpClientSession.TcpClientSession(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.ConstructorEndPointInt32">
            <summary>Sets the shim of TcpClientSession.TcpClientSession(EndPoint remoteEndPoint, Int32 receiveBufferSize)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.DequeueSend">
            <summary>Sets the shim of TcpClientSession.DequeueSend()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.DetectConnected">
            <summary>Sets the shim of TcpClientSession.DetectConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.EnsureSocketClosed">
            <summary>Sets the shim of TcpClientSession.EnsureSocketClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.EnsureSocketClosedSocket">
            <summary>Sets the shim of TcpClientSession.EnsureSocketClosed(Socket prevClient)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.GetSendingItems">
            <summary>Sets the shim of TcpClientSession.GetSendingItems()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.GetSendingQueue">
            <summary>Sets the shim of TcpClientSession.GetSendingQueue()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.HostNameGet">
            <summary>Sets the shim of TcpClientSession.get_HostName()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.HostNameSetString">
            <summary>Sets the shim of TcpClientSession.set_HostName(String value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.IsIgnorableExceptionException">
            <summary>Sets the shim of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.IsIgnorableSocketErrorInt32">
            <summary>Sets the shim of TcpClientSession.IsIgnorableSocketError(Int32 errorCode)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.IsSendingGet">
            <summary>Sets the shim of TcpClientSession.get_IsSending()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.OnSendingCompleted">
            <summary>Sets the shim of TcpClientSession.OnSendingCompleted()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.ProcessConnectSocketObjectSocketAsyncEventArgs">
            <summary>Sets the shim of TcpClientSession.ProcessConnect(Socket socket, Object state, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.Proxy_CompletedObjectProxyEventArgs">
            <summary>Sets the shim of TcpClientSession.Proxy_Completed(Object sender, ProxyEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.ReceiveBufferSizeGet">
            <summary>Sets the shim of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of TcpClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.TrySendArraySegmentOfByte">
            <summary>Sets the shim of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the shim of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession._GetSendingQueueb__1ArraySegmentOfByte">
            <summary>Sets the shim of TcpClientSession.&lt;GetSendingQueue&gt;b__1(ArraySegment`1&lt;Byte&gt; t)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.Close">
            <summary>Sets the shim of TcpClientSession.Close()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.Connect">
            <summary>Sets the shim of TcpClientSession.Connect()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.DequeueSend">
            <summary>Sets the shim of TcpClientSession.DequeueSend()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.DetectConnected">
            <summary>Sets the shim of TcpClientSession.DetectConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.EnsureSocketClosed">
            <summary>Sets the shim of TcpClientSession.EnsureSocketClosed()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.EnsureSocketClosedSocket">
            <summary>Sets the shim of TcpClientSession.EnsureSocketClosed(Socket prevClient)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.GetSendingItems">
            <summary>Sets the shim of TcpClientSession.GetSendingItems()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.GetSendingQueue">
            <summary>Sets the shim of TcpClientSession.GetSendingQueue()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.HostNameGet">
            <summary>Sets the shim of TcpClientSession.get_HostName()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.HostNameSetString">
            <summary>Sets the shim of TcpClientSession.set_HostName(String value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.IsIgnorableExceptionException">
            <summary>Sets the shim of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.IsIgnorableSocketErrorInt32">
            <summary>Sets the shim of TcpClientSession.IsIgnorableSocketError(Int32 errorCode)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.IsSendingGet">
            <summary>Sets the shim of TcpClientSession.get_IsSending()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.OnSendingCompleted">
            <summary>Sets the shim of TcpClientSession.OnSendingCompleted()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.ProcessConnectSocketObjectSocketAsyncEventArgs">
            <summary>Sets the shim of TcpClientSession.ProcessConnect(Socket socket, Object state, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.Proxy_CompletedObjectProxyEventArgs">
            <summary>Sets the shim of TcpClientSession.Proxy_Completed(Object sender, ProxyEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of TcpClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.TrySendArraySegmentOfByte">
            <summary>Sets the shim of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.ShimTcpClientSession.AllInstances.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the shim of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession">
            <summary>Stub type of SuperSocket.ClientEngine.AsyncTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.#ctor(System.Net.EndPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.#ctor(System.Net.EndPoint,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.AttachBackingFieldToReceiveBufferSize">
            <summary>Attaches delegates to emulate StubAsyncTcpSession.ReceiveBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.Close">
            <summary>Sets the stub of TcpClientSession.Close()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.Close01">
            <summary>Sets the stub of TcpClientSession.Close()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.Connect">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.Connect01">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.IsIgnorableException(System.Exception)">
            <summary>Sets the stub of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.IsIgnorableExceptionException">
            <summary>Sets the stub of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnClosed">
            <summary>Sets the stub of AsyncTcpSession.OnClosed()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnClosed01">
            <summary>Sets the stub of AsyncTcpSession.OnClosed()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnConnected">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnConnected01">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnDataReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnError(System.Exception)">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnErrorException">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnGetSocket(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of AsyncTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the stub of AsyncTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.ReceiveBufferSizeGet">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the stub of TcpClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SendInternal(SuperSocket.ClientEngine.PosList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of AsyncTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the stub of AsyncTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SetBuffer(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of AsyncTcpSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SetBufferArraySegmentOfByte">
            <summary>Sets the stub of AsyncTcpSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SocketEventArgsCompleted(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of AsyncTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the stub of AsyncTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.TrySend(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.TrySend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.TrySendArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubAsyncTcpSession.ReceiveBufferSize">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubClientSession">
            <summary>Stub type of SuperSocket.ClientEngine.ClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.#ctor(System.Net.EndPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.AttachBackingFieldToReceiveBufferSize">
            <summary>Attaches delegates to emulate StubClientSession.ReceiveBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.Close">
            <summary>Sets the stub of ClientSession.Close()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.Close01">
            <summary>Sets the stub of ClientSession.Close()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.Connect">
            <summary>Sets the stub of ClientSession.Connect()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.Connect01">
            <summary>Sets the stub of ClientSession.Connect()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.InitializeStub">
            <summary>Initializes a new instance of type StubClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.OnClosed">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.OnClosed01">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.OnConnected">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.OnConnected01">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.OnDataReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.OnError(System.Exception)">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.OnErrorException">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.ReceiveBufferSizeGet">
            <summary>Sets the stub of ClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the stub of ClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.SetBuffer(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.SetBufferArraySegmentOfByte">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.TrySend(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of ClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubClientSession.TrySend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of ClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.TrySendArraySegmentOfByte">
            <summary>Sets the stub of ClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubClientSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the stub of ClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubClientSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubClientSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubClientSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubClientSession.ReceiveBufferSize">
            <summary>Sets the stub of ClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1">
            <summary>Stub type of SuperSocket.ClientEngine.ConcurrentBatchQueue`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.#ctor(`0[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.#ctor(System.Int32,System.Func{`0,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.#ctor(`0[],System.Func{`0,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubConcurrentBatchQueue</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubConcurrentBatchQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubDataEventArgs">
            <summary>Stub type of SuperSocket.ClientEngine.DataEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubDataEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubDataEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDataEventArgs</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubDataEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubDataEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubDataEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs">
            <summary>Stub type of SuperSocket.ClientEngine.ErrorEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubErrorEventArgs</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1">
            <summary>Stub type of SuperSocket.ClientEngine.IBatchQueue`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.#ctor">
            <summary>Initializes a new instance of type StubIBatchQueue</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.CountGet">
            <summary>Sets the stub of IBatchQueue`1.get_Count()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.EnqueueIListOfT0">
            <summary>Sets the stub of IBatchQueue`1.Enqueue(IList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.EnqueueT0">
            <summary>Sets the stub of IBatchQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.IsEmptyGet">
            <summary>Sets the stub of IBatchQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.ws4n::SuperSocket#ClientEngine#IBatchQueue{T}#Enqueue(`0)">
            <summary>Sets the stub of IBatchQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.ws4n::SuperSocket#ClientEngine#IBatchQueue{T}#Enqueue(System.Collections.Generic.IList{`0})">
            <summary>Sets the stub of IBatchQueue`1.Enqueue(IList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.ws4n::SuperSocket#ClientEngine#IBatchQueue{T}#TryDequeue(System.Collections.Generic.IList{`0})">
            <summary>Sets the stub of IBatchQueue`1.TryDequeue(IList`1&lt;!0&gt; outputItems)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.TryDequeueIListOfT0">
            <summary>Sets the stub of IBatchQueue`1.TryDequeue(IList`1&lt;!0&gt; outputItems)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.ws4n::SuperSocket#ClientEngine#IBatchQueue{T}#Count">
            <summary>Sets the stub of IBatchQueue`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIBatchQueue`1.ws4n::SuperSocket#ClientEngine#IBatchQueue{T}#IsEmpty">
            <summary>Sets the stub of IBatchQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubIBufferSetter">
            <summary>Stub type of SuperSocket.ClientEngine.IBufferSetter</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBufferSetter.#ctor">
            <summary>Initializes a new instance of type StubIBufferSetter</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIBufferSetter.SetBufferArraySegmentOfByte">
            <summary>Sets the stub of IBufferSetter.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIBufferSetter.ws4n::SuperSocket#ClientEngine#IBufferSetter#SetBuffer(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of IBufferSetter.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubIClientSession">
            <summary>Stub type of SuperSocket.ClientEngine.IClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.#ctor">
            <summary>Initializes a new instance of type StubIClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.AttachBackingFieldToProxy">
            <summary>Attaches delegates to emulate StubIClientSession.Proxy as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.AttachBackingFieldToReceiveBufferSize">
            <summary>Attaches delegates to emulate StubIClientSession.ReceiveBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.AttachBackingFieldToSendingQueueSize">
            <summary>Attaches delegates to emulate StubIClientSession.SendingQueueSize as a property with a backing field.</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.Close">
            <summary>Sets the stub of IClientSession.Close()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.Connect">
            <summary>Sets the stub of IClientSession.Connect()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.IsConnectedGet">
            <summary>Sets the stub of IClientSession.get_IsConnected()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.ProxyGet">
            <summary>Sets the stub of IClientSession.get_Proxy()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.ProxySetIProxyConnector">
            <summary>Sets the stub of IClientSession.set_Proxy(IProxyConnector value)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.ReceiveBufferSizeGet">
            <summary>Sets the stub of IClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the stub of IClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.SendArraySegmentOfByte">
            <summary>Sets the stub of IClientSession.Send(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.SendByteArrayInt32Int32">
            <summary>Sets the stub of IClientSession.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.SendIListOfArraySegmentOfByte">
            <summary>Sets the stub of IClientSession.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.SendingQueueSizeGet">
            <summary>Sets the stub of IClientSession.get_SendingQueueSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.SendingQueueSizeSetInt32">
            <summary>Sets the stub of IClientSession.set_SendingQueueSize(Int32 value)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Close">
            <summary>Sets the stub of IClientSession.Close()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Connect">
            <summary>Sets the stub of IClientSession.Connect()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Send(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of IClientSession.Send(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of IClientSession.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Send(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IClientSession.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#TrySend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of IClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#TrySend(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of IClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.TrySendArraySegmentOfByte">
            <summary>Sets the stub of IClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIClientSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the stub of IClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#IsConnected">
            <summary>Sets the stub of IClientSession.get_IsConnected()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#Proxy">
            <summary>Sets the stub of IClientSession.get_Proxy()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#ReceiveBufferSize">
            <summary>Sets the stub of IClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIClientSession.ws4n::SuperSocket#ClientEngine#IClientSession#SendingQueueSize">
            <summary>Sets the stub of IClientSession.get_SendingQueueSize()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubIPosList`1">
            <summary>Stub type of SuperSocket.ClientEngine.IPosList`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.#ctor">
            <summary>Initializes a new instance of type StubIPosList</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.AddT0">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubIPosList.Position as a property with a backing field.</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.ContainsT0">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.CopyToT0ArrayInt32">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.CountGet">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.IndexOfT0">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.InsertInt32T0">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.IsReadOnlyGet">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.ItemGetInt32">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.ItemSetInt32T0">
            <summary>Sets the stub of IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.PositionGet">
            <summary>Sets the stub of IPosList`1.get_Position()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.PositionSetInt32">
            <summary>Sets the stub of IPosList`1.set_Position(Int32 value)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.RemoveAtInt32">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIPosList`1.RemoveT0">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#IList{T}#IndexOf(`0)">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#Count">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIPosList`1.global::System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIPosList`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubIPosList`1.ws4n::SuperSocket#ClientEngine#IPosList{T}#Position">
            <summary>Sets the stub of IPosList`1.get_Position()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubIProxyConnector">
            <summary>Stub type of SuperSocket.ClientEngine.IProxyConnector</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIProxyConnector.#ctor">
            <summary>Initializes a new instance of type StubIProxyConnector</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubIProxyConnector.ConnectEndPoint">
            <summary>Sets the stub of IProxyConnector.Connect(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubIProxyConnector.ws4n::SuperSocket#ClientEngine#IProxyConnector#Connect(System.Net.EndPoint)">
            <summary>Sets the stub of IProxyConnector.Connect(EndPoint remoteEndPoint)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubPosList`1">
            <summary>Stub type of SuperSocket.ClientEngine.PosList`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubPosList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubPosList`1.InitializeStub">
            <summary>Initializes a new instance of type StubPosList</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubPosList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubPosList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubPosList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs">
            <summary>Stub type of SuperSocket.ClientEngine.ProxyEventArgs</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.#ctor(System.Net.Sockets.Socket)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.#ctor(System.Boolean,System.Net.Sockets.Socket,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubProxyEventArgs</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubProxyEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1">
            <summary>Stub type of SuperSocket.ClientEngine.SearchMarkState`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1.#ctor(`0[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1.InitializeStub">
            <summary>Initializes a new instance of type StubSearchMarkState</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSearchMarkState`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession">
            <summary>Stub type of SuperSocket.ClientEngine.SslStreamTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.#ctor(System.Net.EndPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.#ctor(System.Net.EndPoint,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.AttachBackingFieldToReceiveBufferSize">
            <summary>Attaches delegates to emulate StubSslStreamTcpSession.ReceiveBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.Close">
            <summary>Sets the stub of SslStreamTcpSession.Close()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.Close01">
            <summary>Sets the stub of SslStreamTcpSession.Close()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.Connect">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.Connect01">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.InitializeStub">
            <summary>Initializes a new instance of type StubSslStreamTcpSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.IsIgnorableException(System.Exception)">
            <summary>Sets the stub of SslStreamTcpSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.IsIgnorableExceptionException">
            <summary>Sets the stub of SslStreamTcpSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnClosed">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnClosed01">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnConnected">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnConnected01">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnDataReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnError(System.Exception)">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnErrorException">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnGetSocket(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of SslStreamTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the stub of SslStreamTcpSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.ReceiveBufferSizeGet">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the stub of TcpClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SendInternal(SuperSocket.ClientEngine.PosList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of SslStreamTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the stub of SslStreamTcpSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SetBuffer(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SetBufferArraySegmentOfByte">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SocketEventArgsCompleted(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of SslStreamTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the stub of SslStreamTcpSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.TrySend(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.TrySend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.TrySendArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubSslStreamTcpSession.ReceiveBufferSize">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Fakes.StubTcpClientSession">
            <summary>Stub type of SuperSocket.ClientEngine.TcpClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.#ctor(System.Net.EndPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.#ctor(System.Net.EndPoint,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.AttachBackingFieldToReceiveBufferSize">
            <summary>Attaches delegates to emulate StubTcpClientSession.ReceiveBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.Close">
            <summary>Sets the stub of TcpClientSession.Close()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.Close01">
            <summary>Sets the stub of TcpClientSession.Close()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.Connect">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.Connect01">
            <summary>Sets the stub of TcpClientSession.Connect()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.InitializeStub">
            <summary>Initializes a new instance of type StubTcpClientSession</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.IsIgnorableException(System.Exception)">
            <summary>Sets the stub of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.IsIgnorableExceptionException">
            <summary>Sets the stub of TcpClientSession.IsIgnorableException(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnClosed">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnClosed01">
            <summary>Sets the stub of ClientSession.OnClosed()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnConnected">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnConnected01">
            <summary>Sets the stub of ClientSession.OnConnected()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnDataReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the stub of ClientSession.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnError(System.Exception)">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnErrorException">
            <summary>Sets the stub of ClientSession.OnError(Exception e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnGetSocket(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of TcpClientSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.OnGetSocketSocketAsyncEventArgs">
            <summary>Sets the stub of TcpClientSession.OnGetSocket(SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.ReceiveBufferSizeGet">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.ReceiveBufferSizeSetInt32">
            <summary>Sets the stub of TcpClientSession.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SendInternal(SuperSocket.ClientEngine.PosList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of TcpClientSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SendInternalPosListOfArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.SendInternal(PosList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SetBuffer(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SetBufferArraySegmentOfByte">
            <summary>Sets the stub of ClientSession.SetBuffer(ArraySegment`1&lt;Byte&gt; bufferSegment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SocketEventArgsCompleted(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>Sets the stub of TcpClientSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.SocketEventArgsCompletedObjectSocketAsyncEventArgs">
            <summary>Sets the stub of TcpClientSession.SocketEventArgsCompleted(Object sender, SocketAsyncEventArgs e)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.TrySend(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.TrySend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.TrySendArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(ArraySegment`1&lt;Byte&gt; segment)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.TrySendIListOfArraySegmentOfByte">
            <summary>Sets the stub of TcpClientSession.TrySend(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Fakes.StubTcpClientSession.ReceiveBufferSize">
            <summary>Sets the stub of TcpClientSession.get_ReceiveBufferSize()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList">
            <summary>Shim type of SuperSocket.ClientEngine.Protocol.ArraySegmentList</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.#ctor(SuperSocket.ClientEngine.Protocol.ArraySegmentList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.ICollection{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.IList{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.Constructor">
            <summary>Sets the shim of ArraySegmentList.ArraySegmentList()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.DecodeEncoding">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.DecodeEncodingInt32Int32">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.DecodeMaskByteArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList.DecodeMask(Byte[] mask, Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.AllInstances.DecodeEncoding">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.AllInstances.DecodeEncodingInt32Int32">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList.AllInstances.DecodeMaskByteArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList.DecodeMask(Byte[] mask, Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1">
            <summary>Shim type of SuperSocket.ClientEngine.Protocol.ArraySegmentList`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.#ctor(SuperSocket.ClientEngine.Protocol.ArraySegmentList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AddSegmentT0ArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AddSegmentT0ArrayInt32Int32Boolean">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length, Boolean toBeCopied)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AddT0">
            <summary>Sets the shim of ArraySegmentList`1.Add(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Clear">
            <summary>Sets the shim of ArraySegmentList`1.Clear()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ClearSegements">
            <summary>Sets the shim of ArraySegmentList`1.ClearSegements()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.Constructor">
            <summary>Sets the shim of ArraySegmentList`1.ArraySegmentList`1()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ContainsT0">
            <summary>Sets the shim of ArraySegmentList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.CopyToT0Array">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.CopyToT0ArrayInt32Int32Int32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to, Int32 srcIndex, Int32 toIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.CountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.GetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.IndexOfT0">
            <summary>Sets the shim of ArraySegmentList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.InsertInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.IsReadOnlyGet">
            <summary>Sets the shim of ArraySegmentList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ItemGetInt32">
            <summary>Sets the shim of ArraySegmentList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ItemSetInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.RemoveAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.RemoveSegmentAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveSegmentAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.RemoveT0">
            <summary>Sets the shim of ArraySegmentList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.SearchLastSegmentSearchMarkStateOfT0">
            <summary>Sets the shim of ArraySegmentList`1.SearchLastSegment(SearchMarkState`1&lt;!0&gt; state)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.SegmentCountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_SegmentCount()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ToArrayData">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.ToArrayDataInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData(Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.TrimEndInt32">
            <summary>Sets the shim of ArraySegmentList`1.TrimEnd(Int32 trimSize)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.AddSegmentT0ArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.AddSegmentT0ArrayInt32Int32Boolean">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length, Boolean toBeCopied)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.AddT0">
            <summary>Sets the shim of ArraySegmentList`1.Add(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.Clear">
            <summary>Sets the shim of ArraySegmentList`1.Clear()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ClearSegements">
            <summary>Sets the shim of ArraySegmentList`1.ClearSegements()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ContainsT0">
            <summary>Sets the shim of ArraySegmentList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0Array">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0ArrayInt32Int32Int32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to, Int32 srcIndex, Int32 toIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.CountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ArraySegmentList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ArraySegmentList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ArraySegmentList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.RemoveSegmentAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveSegmentAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.RemoveT0">
            <summary>Sets the shim of ArraySegmentList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.SearchLastSegmentSearchMarkStateOfT0">
            <summary>Sets the shim of ArraySegmentList`1.SearchLastSegment(SearchMarkState`1&lt;!0&gt; state)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.SegmentCountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_SegmentCount()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ToArrayData">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.ToArrayDataInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData(Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimArraySegmentList`1.AllInstances.TrimEndInt32">
            <summary>Sets the shim of ArraySegmentList`1.TrimEnd(Int32 trimSize)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo">
            <summary>Shim type of SuperSocket.ClientEngine.Protocol.BinaryCommandInfo</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.#ctor(SuperSocket.ClientEngine.Protocol.BinaryCommandInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo{System.Byte[]})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.ConstructorStringByteArray">
            <summary>Sets the shim of BinaryCommandInfo.BinaryCommandInfo(String key, Byte[] data)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimBinaryCommandInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1">
            <summary>Shim type of SuperSocket.ClientEngine.Protocol.CommandInfo`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.#ctor(SuperSocket.ClientEngine.Protocol.CommandInfo{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.ConstructorStringT0">
            <summary>Sets the shim of CommandInfo`1.CommandInfo`1(String key, !0 data)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.DataGet">
            <summary>Sets the shim of CommandInfo`1.get_Data()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.DataSetT0">
            <summary>Sets the shim of CommandInfo`1.set_Data(!0 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.KeyGet">
            <summary>Sets the shim of CommandInfo`1.get_Key()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.KeySetString">
            <summary>Sets the shim of CommandInfo`1.set_Key(String value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.AllInstances.DataGet">
            <summary>Sets the shim of CommandInfo`1.get_Data()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.AllInstances.DataSetT0">
            <summary>Sets the shim of CommandInfo`1.set_Data(!0 value)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.AllInstances.KeyGet">
            <summary>Sets the shim of CommandInfo`1.get_Key()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimCommandInfo`1.AllInstances.KeySetString">
            <summary>Sets the shim of CommandInfo`1.set_Key(String value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo">
            <summary>Shim type of SuperSocket.ClientEngine.Protocol.StringCommandInfo</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.#ctor(SuperSocket.ClientEngine.Protocol.StringCommandInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.ConstructorStringStringStringArray">
            <summary>Sets the shim of StringCommandInfo.StringCommandInfo(String key, String data, String[] parameters)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.GetFirstParam">
            <summary>Sets the shim of StringCommandInfo.GetFirstParam()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.ItemGetInt32">
            <summary>Sets the shim of StringCommandInfo.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.ParametersGet">
            <summary>Sets the shim of StringCommandInfo.get_Parameters()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.ParametersSetStringArray">
            <summary>Sets the shim of StringCommandInfo.set_Parameters(String[] value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.AllInstances.GetFirstParam">
            <summary>Sets the shim of StringCommandInfo.GetFirstParam()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.AllInstances.ItemGetInt32">
            <summary>Sets the shim of StringCommandInfo.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.AllInstances.ParametersGet">
            <summary>Sets the shim of StringCommandInfo.get_Parameters()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.ShimStringCommandInfo.AllInstances.ParametersSetStringArray">
            <summary>Sets the shim of StringCommandInfo.set_Parameters(String[] value)</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ArraySegmentList</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList.InitializeStub">
            <summary>Initializes a new instance of type StubArraySegmentList</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ArraySegmentList`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1.InitializeStub">
            <summary>Initializes a new instance of type StubArraySegmentList</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubArraySegmentList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.BinaryCommandInfo</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo.#ctor(System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryCommandInfo</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubBinaryCommandInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.CommandInfo`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1.#ctor(System.String,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1.InitializeStub">
            <summary>Initializes a new instance of type StubCommandInfo</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubCommandInfo`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.IClientCommandReader`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1.#ctor">
            <summary>Initializes a new instance of type StubIClientCommandReader</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1.GetCommandInfoByteArrayInt32Int32Int32Out">
            <summary>Sets the stub of IClientCommandReader`1.GetCommandInfo(Byte[] readBuffer, Int32 offset, Int32 length, Int32&amp; left)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1.NextCommandReaderGet">
            <summary>Sets the stub of IClientCommandReader`1.get_NextCommandReader()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1.ws4n::SuperSocket#ClientEngine#Protocol#IClientCommandReader{TCommandInfo}#GetCommandInfo(System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>Sets the stub of IClientCommandReader`1.GetCommandInfo(Byte[] readBuffer, Int32 offset, Int32 length, Int32&amp; left)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubIClientCommandReader`1.ws4n::SuperSocket#ClientEngine#Protocol#IClientCommandReader{TCommandInfo}#NextCommandReader">
            <summary>Sets the stub of IClientCommandReader`1.get_NextCommandReader()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ICommand</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand.#ctor">
            <summary>Initializes a new instance of type StubICommand</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand.NameGet">
            <summary>Sets the stub of ICommand.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand.ws4n::SuperSocket#ClientEngine#Protocol#ICommand#Name">
            <summary>Sets the stub of ICommand.get_Name()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ICommand`2</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2.#ctor">
            <summary>Initializes a new instance of type StubICommand</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2.ExecuteCommandT0T1">
            <summary>Sets the stub of ICommand`2.ExecuteCommand(!0 session, !1 commandInfo)</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2.NameGet">
            <summary>Sets the stub of ICommand.get_Name()</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2.ws4n::SuperSocket#ClientEngine#Protocol#ICommand{TSession@TCommandInfo}#ExecuteCommand(`0,`1)">
            <summary>Sets the stub of ICommand`2.ExecuteCommand(!0 session, !1 commandInfo)</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubICommand`2.ws4n::SuperSocket#ClientEngine#Protocol#ICommand#Name">
            <summary>Sets the stub of ICommand.get_Name()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ICommandInfo</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo.#ctor">
            <summary>Initializes a new instance of type StubICommandInfo</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo.KeyGet">
            <summary>Sets the stub of ICommandInfo.get_Key()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo.ws4n::SuperSocket#ClientEngine#Protocol#ICommandInfo#Key">
            <summary>Sets the stub of ICommandInfo.get_Key()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.ICommandInfo`1</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1.#ctor">
            <summary>Initializes a new instance of type StubICommandInfo</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1.DataGet">
            <summary>Sets the stub of ICommandInfo`1.get_Data()</summary>
        </member>
        <member name="F:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1.KeyGet">
            <summary>Sets the stub of ICommandInfo.get_Key()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1.ws4n::SuperSocket#ClientEngine#Protocol#ICommandInfo{TCommandData}#Data">
            <summary>Sets the stub of ICommandInfo`1.get_Data()</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubICommandInfo`1.ws4n::SuperSocket#ClientEngine#Protocol#ICommandInfo#Key">
            <summary>Sets the stub of ICommandInfo.get_Key()</summary>
        </member>
        <member name="T:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo">
            <summary>Stub type of SuperSocket.ClientEngine.Protocol.StringCommandInfo</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo.InitializeStub">
            <summary>Initializes a new instance of type StubStringCommandInfo</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.ClientEngine.Protocol.Fakes.StubStringCommandInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimBadRequest">
            <summary>Shim type of WebSocket4Net.Command.BadRequest</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.#ctor(WebSocket4Net.Command.BadRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBadRequest.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.Constructor">
            <summary>Sets the shim of BadRequest.BadRequest()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of BadRequest.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.NameGet">
            <summary>Sets the shim of BadRequest.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.StaticConstructor">
            <summary>Sets the shim of BadRequest.BadRequest()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimBadRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of BadRequest.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBadRequest.AllInstances.NameGet">
            <summary>Sets the shim of BadRequest.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimBinary">
            <summary>Shim type of WebSocket4Net.Command.Binary</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.#ctor(WebSocket4Net.Command.Binary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimBinary.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.Constructor">
            <summary>Sets the shim of Binary.Binary()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Binary.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.NameGet">
            <summary>Sets the shim of Binary.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimBinary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Binary.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimBinary.AllInstances.NameGet">
            <summary>Sets the shim of Binary.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimClose">
            <summary>Shim type of WebSocket4Net.Command.Close</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.#ctor(WebSocket4Net.Command.Close)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimClose.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.Constructor">
            <summary>Sets the shim of Close.Close()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Close.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.NameGet">
            <summary>Sets the shim of Close.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimClose.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Close.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimClose.AllInstances.NameGet">
            <summary>Sets the shim of Close.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimHandshake">
            <summary>Shim type of WebSocket4Net.Command.Handshake</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.#ctor(WebSocket4Net.Command.Handshake)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimHandshake.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.Constructor">
            <summary>Sets the shim of Handshake.Handshake()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Handshake.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.NameGet">
            <summary>Sets the shim of Handshake.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimHandshake.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Handshake.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimHandshake.AllInstances.NameGet">
            <summary>Sets the shim of Handshake.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimPing">
            <summary>Shim type of WebSocket4Net.Command.Ping</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.#ctor(WebSocket4Net.Command.Ping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPing.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.Constructor">
            <summary>Sets the shim of Ping.Ping()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Ping.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.NameGet">
            <summary>Sets the shim of Ping.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimPing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Ping.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPing.AllInstances.NameGet">
            <summary>Sets the shim of Ping.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimPong">
            <summary>Shim type of WebSocket4Net.Command.Pong</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.#ctor(WebSocket4Net.Command.Pong)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimPong.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.Constructor">
            <summary>Sets the shim of Pong.Pong()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Pong.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.NameGet">
            <summary>Sets the shim of Pong.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimPong.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Pong.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimPong.AllInstances.NameGet">
            <summary>Sets the shim of Pong.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimText">
            <summary>Shim type of WebSocket4Net.Command.Text</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.#ctor(WebSocket4Net.Command.Text)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimText.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.Constructor">
            <summary>Sets the shim of Text.Text()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Text.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.NameGet">
            <summary>Sets the shim of Text.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.AllInstances.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the shim of Text.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimText.AllInstances.NameGet">
            <summary>Sets the shim of Text.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase">
            <summary>Shim type of WebSocket4Net.Command.WebSocketCommandBase</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.#ctor(WebSocket4Net.Command.WebSocketCommandBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.Bind(SuperSocket.ClientEngine.Protocol.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.Bind(SuperSocket.ClientEngine.Protocol.ICommand{WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.Constructor">
            <summary>Sets the shim of WebSocketCommandBase.WebSocketCommandBase()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.ShimWebSocketCommandBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubBadRequest">
            <summary>Stub type of WebSocket4Net.Command.BadRequest</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBadRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBadRequest.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of BadRequest.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubBadRequest.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of BadRequest.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBadRequest.InitializeStub">
            <summary>Initializes a new instance of type StubBadRequest</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubBadRequest.NameGet">
            <summary>Sets the stub of BadRequest.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBadRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBadRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBadRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBadRequest.Name">
            <summary>Sets the stub of BadRequest.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubBinary">
            <summary>Stub type of WebSocket4Net.Command.Binary</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBinary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBinary.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Binary.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubBinary.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Binary.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubBinary.InitializeStub">
            <summary>Initializes a new instance of type StubBinary</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubBinary.NameGet">
            <summary>Sets the stub of Binary.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBinary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBinary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBinary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubBinary.Name">
            <summary>Sets the stub of Binary.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubClose">
            <summary>Stub type of WebSocket4Net.Command.Close</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubClose.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubClose.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Close.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubClose.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Close.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubClose.InitializeStub">
            <summary>Initializes a new instance of type StubClose</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubClose.NameGet">
            <summary>Sets the stub of Close.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubClose.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubClose.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubClose.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubClose.Name">
            <summary>Sets the stub of Close.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubHandshake">
            <summary>Stub type of WebSocket4Net.Command.Handshake</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubHandshake.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubHandshake.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Handshake.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubHandshake.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Handshake.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubHandshake.InitializeStub">
            <summary>Initializes a new instance of type StubHandshake</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubHandshake.NameGet">
            <summary>Sets the stub of Handshake.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubHandshake.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubHandshake.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubHandshake.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubHandshake.Name">
            <summary>Sets the stub of Handshake.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubPing">
            <summary>Stub type of WebSocket4Net.Command.Ping</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPing.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Ping.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubPing.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Ping.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPing.InitializeStub">
            <summary>Initializes a new instance of type StubPing</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubPing.NameGet">
            <summary>Sets the stub of Ping.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPing.Name">
            <summary>Sets the stub of Ping.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubPong">
            <summary>Stub type of WebSocket4Net.Command.Pong</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPong.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPong.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Pong.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubPong.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Pong.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubPong.InitializeStub">
            <summary>Initializes a new instance of type StubPong</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubPong.NameGet">
            <summary>Sets the stub of Pong.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPong.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPong.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPong.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubPong.Name">
            <summary>Sets the stub of Pong.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubText">
            <summary>Stub type of WebSocket4Net.Command.Text</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubText.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubText.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of Text.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubText.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of Text.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubText.InitializeStub">
            <summary>Initializes a new instance of type StubText</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubText.NameGet">
            <summary>Sets the stub of Text.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubText.Name">
            <summary>Sets the stub of Text.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase">
            <summary>Stub type of WebSocket4Net.Command.WebSocketCommandBase</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.ExecuteCommand(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo)">
            <summary>Sets the stub of WebSocketCommandBase.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.ExecuteCommandWebSocketWebSocketCommandInfo">
            <summary>Sets the stub of WebSocketCommandBase.ExecuteCommand(WebSocket session, WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="M:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketCommandBase</summary>
        </member>
        <member name="F:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.NameGet">
            <summary>Sets the stub of WebSocketCommandBase.get_Name()</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocket4Net.Command.Fakes.StubWebSocketCommandBase.Name">
            <summary>Sets the stub of WebSocketCommandBase.get_Name()</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimClosedEventArgs">
            <summary>Shim type of WebSocket4Net.ClosedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimClosedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimClosedEventArgs.#ctor(WebSocket4Net.ClosedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimClosedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimClosedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.CodeGet">
            <summary>Sets the shim of ClosedEventArgs.get_Code()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.CodeSetInt16">
            <summary>Sets the shim of ClosedEventArgs.set_Code(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.ConstructorInt16String">
            <summary>Sets the shim of ClosedEventArgs.ClosedEventArgs(Int16 code, String reason)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.ReasonGet">
            <summary>Sets the shim of ClosedEventArgs.get_Reason()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.ReasonSetString">
            <summary>Sets the shim of ClosedEventArgs.set_Reason(String value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimClosedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.AllInstances.CodeGet">
            <summary>Sets the shim of ClosedEventArgs.get_Code()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.AllInstances.CodeSetInt16">
            <summary>Sets the shim of ClosedEventArgs.set_Code(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.AllInstances.ReasonGet">
            <summary>Sets the shim of ClosedEventArgs.get_Reason()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimClosedEventArgs.AllInstances.ReasonSetString">
            <summary>Sets the shim of ClosedEventArgs.set_Reason(String value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimDataReceivedEventArgs">
            <summary>Shim type of WebSocket4Net.DataReceivedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.#ctor(WebSocket4Net.DataReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.ConstructorByteArray">
            <summary>Sets the shim of DataReceivedEventArgs.DataReceivedEventArgs(Byte[] data)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.DataGet">
            <summary>Sets the shim of DataReceivedEventArgs.get_Data()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.DataSetByteArray">
            <summary>Sets the shim of DataReceivedEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of DataReceivedEventArgs.get_Data()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimDataReceivedEventArgs.AllInstances.DataSetByteArray">
            <summary>Sets the shim of DataReceivedEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimExtensions">
            <summary>Shim type of WebSocket4Net.Extensions</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimExtensions.GetValueOf1IDictionaryOfStringObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0})">
            <summary>Sets the shim of Extensions.GetValue(IDictionary`2&lt;String,Object&gt; valueContainer, String name)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimExtensions.GetValueOf1IDictionaryOfStringObjectStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0,``0})">
            <summary>Sets the shim of Extensions.GetValue(IDictionary`2&lt;String,Object&gt; valueContainer, String name, !!0 defaultValue)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.AppendFormatWithCrCfStringBuilderStringObject">
            <summary>Sets the shim of Extensions.AppendFormatWithCrCf(StringBuilder builder, String format, Object arg)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.AppendFormatWithCrCfStringBuilderStringObjectArray">
            <summary>Sets the shim of Extensions.AppendFormatWithCrCf(StringBuilder builder, String format, Object[] args)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.AppendWithCrCfStringBuilder">
            <summary>Sets the shim of Extensions.AppendWithCrCf(StringBuilder builder)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.AppendWithCrCfStringBuilderString">
            <summary>Sets the shim of Extensions.AppendWithCrCf(StringBuilder builder, String content)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.IsSimpleTypeType">
            <summary>Sets the shim of Extensions.IsSimpleType(Type type)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.ParseMimeHeaderStringIDictionaryOfStringObjectStringOut">
            <summary>Sets the shim of Extensions.ParseMimeHeader(String source, IDictionary`2&lt;String,Object&gt; valueContainer, String&amp; verbLine)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimExtensions.StaticConstructor">
            <summary>Sets the shim of Extensions.Extensions()</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimJsonWebSocket">
            <summary>Shim type of WebSocket4Net.JsonWebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.#ctor(WebSocket4Net.JsonWebSocket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.OnOf1StringActionOfJsonWebSocketM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Action{WebSocket4Net.JsonWebSocket,``0}})">
            <summary>Sets the shim of JsonWebSocket.On(String name, Action`2&lt;JsonWebSocket,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.OnOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Action{``0}})">
            <summary>Sets the shim of JsonWebSocket.On(String name, Action`1&lt;!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.QueryOf1StringObjectActionOfJsonWebSocketM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`2&lt;JsonWebSocket,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.QueryOf1StringObjectActionOfJsonWebSocketM0ObjectObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,``0,System.Object},System.Object,System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`3&lt;JsonWebSocket,!!0,Object&gt; executor, Object state)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.QueryOf1StringObjectActionOfJsonWebSocketStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,System.String,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`3&lt;JsonWebSocket,String,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.QueryOf1StringObjectActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object,System.Action{``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`1&lt;!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.QueryOf1StringObjectActionOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object,System.Action{System.String,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`2&lt;String,!!0&gt; executor)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of JsonWebSocket.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of JsonWebSocket.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AutoSendPingIntervalGet">
            <summary>Sets the shim of JsonWebSocket.get_AutoSendPingInterval()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AutoSendPingIntervalSetInt32">
            <summary>Sets the shim of JsonWebSocket.set_AutoSendPingInterval(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.Close">
            <summary>Sets the shim of JsonWebSocket.Close()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ClosedAddEventHandler">
            <summary>Sets the shim of JsonWebSocket.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ClosedRemoveEventHandler">
            <summary>Sets the shim of JsonWebSocket.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorString">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringListOfKeyValuePairOfStringString">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringString">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringStringListOfKeyValuePairOfStringString">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringStringListOfKeyValuePairOfStringStringListOfKeyValuePairOfStringStringStringStringWebSocketVersion">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; customHeaderItems, String userAgent, String origin, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringStringListOfKeyValuePairOfStringStringListOfKeyValuePairOfStringStringStringWebSocketVersion">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; customHeaderItems, String userAgent, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringStringListOfKeyValuePairOfStringStringWebSocketVersion">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringStringWebSocketVersion">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, String subProtocol, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorStringWebSocketVersion">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(String uri, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ConstructorWebSocket">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket(WebSocket websocket)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.DeserializeObjectStringType">
            <summary>Sets the shim of JsonWebSocket.DeserializeObject(String json, Type type)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.Dispose">
            <summary>Sets the shim of JsonWebSocket.Dispose()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.DisposeBoolean">
            <summary>Sets the shim of JsonWebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.EnableAutoSendPingGet">
            <summary>Sets the shim of JsonWebSocket.get_EnableAutoSendPing()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.EnableAutoSendPingSetBoolean">
            <summary>Sets the shim of JsonWebSocket.set_EnableAutoSendPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.Open">
            <summary>Sets the shim of JsonWebSocket.Open()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.OpenedAddEventHandler">
            <summary>Sets the shim of JsonWebSocket.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.OpenedRemoveEventHandler">
            <summary>Sets the shim of JsonWebSocket.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ReceiveBufferSizeGet">
            <summary>Sets the shim of JsonWebSocket.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of JsonWebSocket.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.SendStringObject">
            <summary>Sets the shim of JsonWebSocket.Send(String name, Object content)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.SerializeObjectObject">
            <summary>Sets the shim of JsonWebSocket.SerializeObject(Object target)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.StateGet">
            <summary>Sets the shim of JsonWebSocket.get_State()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.StaticConstructor">
            <summary>Sets the shim of JsonWebSocket.JsonWebSocket()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.SubscribeEvents">
            <summary>Sets the shim of JsonWebSocket.SubscribeEvents()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.m_WebSocket_ClosedObjectEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.m_WebSocket_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.m_WebSocket_MessageReceivedObjectMessageReceivedEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_MessageReceived(Object sender, MessageReceivedEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.m_WebSocket_OpenedObjectEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Opened(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.OnOf1StringActionOfJsonWebSocketM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocket4Net.JsonWebSocket,System.String,System.Action{WebSocket4Net.JsonWebSocket,``0}})">
            <summary>Sets the shim of JsonWebSocket.On(String name, Action`2&lt;JsonWebSocket,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.OnOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocket4Net.JsonWebSocket,System.String,System.Action{``0}})">
            <summary>Sets the shim of JsonWebSocket.On(String name, Action`1&lt;!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.QueryOf1StringObjectActionOfJsonWebSocketM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebSocket4Net.JsonWebSocket,System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`2&lt;JsonWebSocket,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.QueryOf1StringObjectActionOfJsonWebSocketM0ObjectObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebSocket4Net.JsonWebSocket,System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,``0,System.Object},System.Object,System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`3&lt;JsonWebSocket,!!0,Object&gt; executor, Object state)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.QueryOf1StringObjectActionOfJsonWebSocketStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebSocket4Net.JsonWebSocket,System.String,System.Object,System.Action{WebSocket4Net.JsonWebSocket,System.String,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`3&lt;JsonWebSocket,String,!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.QueryOf1StringObjectActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebSocket4Net.JsonWebSocket,System.String,System.Object,System.Action{``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`1&lt;!!0&gt; executor)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.QueryOf1StringObjectActionOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebSocket4Net.JsonWebSocket,System.String,System.Object,System.Action{System.String,``0},System.String})">
            <summary>Sets the shim of JsonWebSocket.Query(String name, Object content, Action`2&lt;String,!!0&gt; executor)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of JsonWebSocket.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of JsonWebSocket.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.AutoSendPingIntervalGet">
            <summary>Sets the shim of JsonWebSocket.get_AutoSendPingInterval()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.AutoSendPingIntervalSetInt32">
            <summary>Sets the shim of JsonWebSocket.set_AutoSendPingInterval(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.Close">
            <summary>Sets the shim of JsonWebSocket.Close()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ClosedAddEventHandler">
            <summary>Sets the shim of JsonWebSocket.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ClosedRemoveEventHandler">
            <summary>Sets the shim of JsonWebSocket.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.DeserializeObjectStringType">
            <summary>Sets the shim of JsonWebSocket.DeserializeObject(String json, Type type)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.Dispose">
            <summary>Sets the shim of JsonWebSocket.Dispose()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.DisposeBoolean">
            <summary>Sets the shim of JsonWebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.EnableAutoSendPingGet">
            <summary>Sets the shim of JsonWebSocket.get_EnableAutoSendPing()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.EnableAutoSendPingSetBoolean">
            <summary>Sets the shim of JsonWebSocket.set_EnableAutoSendPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.Open">
            <summary>Sets the shim of JsonWebSocket.Open()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.OpenedAddEventHandler">
            <summary>Sets the shim of JsonWebSocket.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.OpenedRemoveEventHandler">
            <summary>Sets the shim of JsonWebSocket.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of JsonWebSocket.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of JsonWebSocket.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.SendStringObject">
            <summary>Sets the shim of JsonWebSocket.Send(String name, Object content)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.SerializeObjectObject">
            <summary>Sets the shim of JsonWebSocket.SerializeObject(Object target)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.StateGet">
            <summary>Sets the shim of JsonWebSocket.get_State()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.SubscribeEvents">
            <summary>Sets the shim of JsonWebSocket.SubscribeEvents()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.m_WebSocket_ClosedObjectEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.m_WebSocket_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.m_WebSocket_MessageReceivedObjectMessageReceivedEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_MessageReceived(Object sender, MessageReceivedEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimJsonWebSocket.AllInstances.m_WebSocket_OpenedObjectEventArgs">
            <summary>Sets the shim of JsonWebSocket.m_WebSocket_Opened(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs">
            <summary>Shim type of WebSocket4Net.MessageReceivedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.#ctor(WebSocket4Net.MessageReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.ConstructorString">
            <summary>Sets the shim of MessageReceivedEventArgs.MessageReceivedEventArgs(String message)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.MessageGet">
            <summary>Sets the shim of MessageReceivedEventArgs.get_Message()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.MessageSetString">
            <summary>Sets the shim of MessageReceivedEventArgs.set_Message(String value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.AllInstances.MessageGet">
            <summary>Sets the shim of MessageReceivedEventArgs.get_Message()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimMessageReceivedEventArgs.AllInstances.MessageSetString">
            <summary>Sets the shim of MessageReceivedEventArgs.set_Message(String value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimOpCode">
            <summary>Shim type of WebSocket4Net.OpCode</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimOpCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimOpCode.#ctor(WebSocket4Net.OpCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimOpCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimOpCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimOpCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimOpCode.Constructor">
            <summary>Sets the shim of OpCode.OpCode()</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimOpCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocket">
            <summary>Shim type of WebSocket4Net.WebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocket.#ctor(WebSocket4Net.WebSocket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocket.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of WebSocket.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of WebSocket.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AutoSendPingIntervalGet">
            <summary>Sets the shim of WebSocket.get_AutoSendPingInterval()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AutoSendPingIntervalSetInt32">
            <summary>Sets the shim of WebSocket.set_AutoSendPingInterval(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CheckCloseHandshakeObject">
            <summary>Sets the shim of WebSocket.CheckCloseHandshake(Object state)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ClearTimer">
            <summary>Sets the shim of WebSocket.ClearTimer()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ClientGet">
            <summary>Sets the shim of WebSocket.get_Client()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ClientSetTcpClientSession">
            <summary>Sets the shim of WebSocket.set_Client(TcpClientSession value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.Close">
            <summary>Sets the shim of WebSocket.Close()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CloseInt32String">
            <summary>Sets the shim of WebSocket.Close(Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CloseString">
            <summary>Sets the shim of WebSocket.Close(String reason)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CloseWithoutHandshake">
            <summary>Sets the shim of WebSocket.CloseWithoutHandshake()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ClosedAddEventHandler">
            <summary>Sets the shim of WebSocket.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ClosedRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CommandReaderGet">
            <summary>Sets the shim of WebSocket.get_CommandReader()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CommandReaderSetIClientCommandReaderOfWebSocketCommandInfo">
            <summary>Sets the shim of WebSocket.set_CommandReader(IClientCommandReader`1&lt;WebSocketCommandInfo&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ConstructorStringStringListOfKeyValuePairOfStringStringListOfKeyValuePairOfStringStringStringStringWebSocketVersionEndPoint">
            <summary>Sets the shim of WebSocket.WebSocket(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; customHeaderItems, String userAgent, String origin, WebSocketVersion version, EndPoint httpConnectProxy)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ConstructorStringStringWebSocketVersion">
            <summary>Sets the shim of WebSocket.WebSocket(String uri, String subProtocol, WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CookiesGet">
            <summary>Sets the shim of WebSocket.get_Cookies()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CookiesSetListOfKeyValuePairOfStringString">
            <summary>Sets the shim of WebSocket.set_Cookies(List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CreateClientString">
            <summary>Sets the shim of WebSocket.CreateClient(String uri)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CreateSecureClientString">
            <summary>Sets the shim of WebSocket.CreateSecureClient(String uri)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CustomHeaderItemsGet">
            <summary>Sets the shim of WebSocket.get_CustomHeaderItems()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.CustomHeaderItemsSetListOfKeyValuePairOfStringString">
            <summary>Sets the shim of WebSocket.set_CustomHeaderItems(List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.DataReceivedAddEventHandlerOfDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.add_DataReceived(EventHandler`1&lt;DataReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.DataReceivedRemoveEventHandlerOfDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.remove_DataReceived(EventHandler`1&lt;DataReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.Dispose">
            <summary>Sets the shim of WebSocket.Dispose()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.DisposeBoolean">
            <summary>Sets the shim of WebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.EnableAutoSendPingGet">
            <summary>Sets the shim of WebSocket.get_EnableAutoSendPing()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.EnableAutoSendPingSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableAutoSendPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.EnsureWebSocketOpen">
            <summary>Sets the shim of WebSocket.EnsureWebSocketOpen()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ExecuteCommandWebSocketCommandInfo">
            <summary>Sets the shim of WebSocket.ExecuteCommand(WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.FireClosed">
            <summary>Sets the shim of WebSocket.FireClosed()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.FireDataReceivedByteArray">
            <summary>Sets the shim of WebSocket.FireDataReceived(Byte[] data)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.FireErrorException">
            <summary>Sets the shim of WebSocket.FireError(Exception error)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.FireMessageReceivedString">
            <summary>Sets the shim of WebSocket.FireMessageReceived(String message)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.GetAvailableProcessorInt32Array">
            <summary>Sets the shim of WebSocket.GetAvailableProcessor(Int32[] availableVersions)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.GetProtocolProcessorWebSocketVersion">
            <summary>Sets the shim of WebSocket.GetProtocolProcessor(WebSocketVersion version)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.HandshakeHostGet">
            <summary>Sets the shim of WebSocket.get_HandshakeHost()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.HandshakeHostSetString">
            <summary>Sets the shim of WebSocket.set_HandshakeHost(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.HandshakedGet">
            <summary>Sets the shim of WebSocket.get_Handshaked()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.HandshakedSetBoolean">
            <summary>Sets the shim of WebSocket.set_Handshaked(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.HttpConnectProxyGet">
            <summary>Sets the shim of WebSocket.get_HttpConnectProxy()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.InitializeStringStringListOfKeyValuePairOfStringStringListOfKeyValuePairOfStringStringStringStringWebSocketVersionEndPoint">
            <summary>Sets the shim of WebSocket.Initialize(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; customHeaderItems, String userAgent, String origin, WebSocketVersion version, EndPoint httpConnectProxy)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ItemsGet">
            <summary>Sets the shim of WebSocket.get_Items()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ItemsSetIDictionaryOfStringObject">
            <summary>Sets the shim of WebSocket.set_Items(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.LastActiveTimeGet">
            <summary>Sets the shim of WebSocket.get_LastActiveTime()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.LastActiveTimeSetDateTime">
            <summary>Sets the shim of WebSocket.set_LastActiveTime(DateTime value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.LastPongResponseGet">
            <summary>Sets the shim of WebSocket.get_LastPongResponse()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.LastPongResponseSetString">
            <summary>Sets the shim of WebSocket.set_LastPongResponse(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.MessageReceivedAddEventHandlerOfMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.add_MessageReceived(EventHandler`1&lt;MessageReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.MessageReceivedRemoveEventHandlerOfMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.remove_MessageReceived(EventHandler`1&lt;MessageReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.NoDelayGet">
            <summary>Sets the shim of WebSocket.get_NoDelay()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.NoDelaySetBoolean">
            <summary>Sets the shim of WebSocket.set_NoDelay(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.NotSpecifiedVersionGet">
            <summary>Sets the shim of WebSocket.get_NotSpecifiedVersion()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.NotSpecifiedVersionSetBoolean">
            <summary>Sets the shim of WebSocket.set_NotSpecifiedVersion(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnClosed">
            <summary>Sets the shim of WebSocket.OnClosed()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnConnected">
            <summary>Sets the shim of WebSocket.OnConnected()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the shim of WebSocket.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnErrorErrorEventArgs">
            <summary>Sets the shim of WebSocket.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnErrorException">
            <summary>Sets the shim of WebSocket.OnError(Exception e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnHandshaked">
            <summary>Sets the shim of WebSocket.OnHandshaked()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OnPingTimerCallbackObject">
            <summary>Sets the shim of WebSocket.OnPingTimerCallback(Object state)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.Open">
            <summary>Sets the shim of WebSocket.Open()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OpenedAddEventHandler">
            <summary>Sets the shim of WebSocket.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OpenedRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OriginGet">
            <summary>Sets the shim of WebSocket.get_Origin()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.OriginSetString">
            <summary>Sets the shim of WebSocket.set_Origin(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ProtocolProcessorGet">
            <summary>Sets the shim of WebSocket.get_ProtocolProcessor()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ProtocolProcessorSetIProtocolProcessor">
            <summary>Sets the shim of WebSocket.set_ProtocolProcessor(IProtocolProcessor value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ProxyGet">
            <summary>Sets the shim of WebSocket.get_Proxy()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ProxySetIProxyConnector">
            <summary>Sets the shim of WebSocket.set_Proxy(IProxyConnector value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ReceiveBufferSizeGet">
            <summary>Sets the shim of WebSocket.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of WebSocket.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.ResolveUriStringInt32Int32Out">
            <summary>Sets the shim of WebSocket.ResolveUri(String uri, Int32 defaultPort, Int32&amp; port)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SendByteArrayInt32Int32">
            <summary>Sets the shim of WebSocket.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SendIListOfArraySegmentOfByte">
            <summary>Sets the shim of WebSocket.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SendString">
            <summary>Sets the shim of WebSocket.Send(String message)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.StateCodeGet">
            <summary>Sets the shim of WebSocket.get_StateCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.StateGet">
            <summary>Sets the shim of WebSocket.get_State()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.StaticConstructor">
            <summary>Sets the shim of WebSocket.WebSocket()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SubProtocolGet">
            <summary>Sets the shim of WebSocket.get_SubProtocol()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SubProtocolSetString">
            <summary>Sets the shim of WebSocket.set_SubProtocol(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.SupportBinaryGet">
            <summary>Sets the shim of WebSocket.get_SupportBinary()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.TargetUriGet">
            <summary>Sets the shim of WebSocket.get_TargetUri()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.TargetUriSetUri">
            <summary>Sets the shim of WebSocket.set_TargetUri(Uri value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.VersionGet">
            <summary>Sets the shim of WebSocket.get_Version()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.VersionSetWebSocketVersion">
            <summary>Sets the shim of WebSocket.set_Version(WebSocketVersion value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.client_ClosedObjectEventArgs">
            <summary>Sets the shim of WebSocket.client_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.client_ConnectedObjectEventArgs">
            <summary>Sets the shim of WebSocket.client_Connected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.client_DataReceivedObjectDataEventArgs">
            <summary>Sets the shim of WebSocket.client_DataReceived(Object sender, DataEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.client_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocket.client_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.AllowUnstrustedCertificateGet">
            <summary>Sets the shim of WebSocket.get_AllowUnstrustedCertificate()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.AllowUnstrustedCertificateSetBoolean">
            <summary>Sets the shim of WebSocket.set_AllowUnstrustedCertificate(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.AutoSendPingIntervalGet">
            <summary>Sets the shim of WebSocket.get_AutoSendPingInterval()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.AutoSendPingIntervalSetInt32">
            <summary>Sets the shim of WebSocket.set_AutoSendPingInterval(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CheckCloseHandshakeObject">
            <summary>Sets the shim of WebSocket.CheckCloseHandshake(Object state)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ClearTimer">
            <summary>Sets the shim of WebSocket.ClearTimer()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ClientGet">
            <summary>Sets the shim of WebSocket.get_Client()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ClientSetTcpClientSession">
            <summary>Sets the shim of WebSocket.set_Client(TcpClientSession value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.Close">
            <summary>Sets the shim of WebSocket.Close()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CloseInt32String">
            <summary>Sets the shim of WebSocket.Close(Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CloseString">
            <summary>Sets the shim of WebSocket.Close(String reason)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CloseWithoutHandshake">
            <summary>Sets the shim of WebSocket.CloseWithoutHandshake()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ClosedAddEventHandler">
            <summary>Sets the shim of WebSocket.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ClosedRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CommandReaderGet">
            <summary>Sets the shim of WebSocket.get_CommandReader()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CommandReaderSetIClientCommandReaderOfWebSocketCommandInfo">
            <summary>Sets the shim of WebSocket.set_CommandReader(IClientCommandReader`1&lt;WebSocketCommandInfo&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CookiesGet">
            <summary>Sets the shim of WebSocket.get_Cookies()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CookiesSetListOfKeyValuePairOfStringString">
            <summary>Sets the shim of WebSocket.set_Cookies(List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CreateClientString">
            <summary>Sets the shim of WebSocket.CreateClient(String uri)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CreateSecureClientString">
            <summary>Sets the shim of WebSocket.CreateSecureClient(String uri)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CustomHeaderItemsGet">
            <summary>Sets the shim of WebSocket.get_CustomHeaderItems()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.CustomHeaderItemsSetListOfKeyValuePairOfStringString">
            <summary>Sets the shim of WebSocket.set_CustomHeaderItems(List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.DataReceivedAddEventHandlerOfDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.add_DataReceived(EventHandler`1&lt;DataReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.DataReceivedRemoveEventHandlerOfDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.remove_DataReceived(EventHandler`1&lt;DataReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.Dispose">
            <summary>Sets the shim of WebSocket.Dispose()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.EnableAutoSendPingGet">
            <summary>Sets the shim of WebSocket.get_EnableAutoSendPing()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.EnableAutoSendPingSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableAutoSendPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.EnsureWebSocketOpen">
            <summary>Sets the shim of WebSocket.EnsureWebSocketOpen()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.add_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.remove_Error(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ExecuteCommandWebSocketCommandInfo">
            <summary>Sets the shim of WebSocket.ExecuteCommand(WebSocketCommandInfo commandInfo)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.FireClosed">
            <summary>Sets the shim of WebSocket.FireClosed()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.FireDataReceivedByteArray">
            <summary>Sets the shim of WebSocket.FireDataReceived(Byte[] data)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.FireErrorException">
            <summary>Sets the shim of WebSocket.FireError(Exception error)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.FireMessageReceivedString">
            <summary>Sets the shim of WebSocket.FireMessageReceived(String message)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.GetAvailableProcessorInt32Array">
            <summary>Sets the shim of WebSocket.GetAvailableProcessor(Int32[] availableVersions)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.HandshakeHostGet">
            <summary>Sets the shim of WebSocket.get_HandshakeHost()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.HandshakeHostSetString">
            <summary>Sets the shim of WebSocket.set_HandshakeHost(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.HandshakedGet">
            <summary>Sets the shim of WebSocket.get_Handshaked()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.HandshakedSetBoolean">
            <summary>Sets the shim of WebSocket.set_Handshaked(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.HttpConnectProxyGet">
            <summary>Sets the shim of WebSocket.get_HttpConnectProxy()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.InitializeStringStringListOfKeyValuePairOfStringStringListOfKeyValuePairOfStringStringStringStringWebSocketVersionEndPoint">
            <summary>Sets the shim of WebSocket.Initialize(String uri, String subProtocol, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; cookies, List`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; customHeaderItems, String userAgent, String origin, WebSocketVersion version, EndPoint httpConnectProxy)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ItemsGet">
            <summary>Sets the shim of WebSocket.get_Items()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ItemsSetIDictionaryOfStringObject">
            <summary>Sets the shim of WebSocket.set_Items(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.LastActiveTimeGet">
            <summary>Sets the shim of WebSocket.get_LastActiveTime()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.LastActiveTimeSetDateTime">
            <summary>Sets the shim of WebSocket.set_LastActiveTime(DateTime value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.LastPongResponseGet">
            <summary>Sets the shim of WebSocket.get_LastPongResponse()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.LastPongResponseSetString">
            <summary>Sets the shim of WebSocket.set_LastPongResponse(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.MessageReceivedAddEventHandlerOfMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.add_MessageReceived(EventHandler`1&lt;MessageReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.MessageReceivedRemoveEventHandlerOfMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.remove_MessageReceived(EventHandler`1&lt;MessageReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.NoDelayGet">
            <summary>Sets the shim of WebSocket.get_NoDelay()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.NoDelaySetBoolean">
            <summary>Sets the shim of WebSocket.set_NoDelay(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.NotSpecifiedVersionGet">
            <summary>Sets the shim of WebSocket.get_NotSpecifiedVersion()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.NotSpecifiedVersionSetBoolean">
            <summary>Sets the shim of WebSocket.set_NotSpecifiedVersion(Boolean value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnClosed">
            <summary>Sets the shim of WebSocket.OnClosed()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnConnected">
            <summary>Sets the shim of WebSocket.OnConnected()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnDataReceivedByteArrayInt32Int32">
            <summary>Sets the shim of WebSocket.OnDataReceived(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnErrorErrorEventArgs">
            <summary>Sets the shim of WebSocket.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnErrorException">
            <summary>Sets the shim of WebSocket.OnError(Exception e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnHandshaked">
            <summary>Sets the shim of WebSocket.OnHandshaked()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OnPingTimerCallbackObject">
            <summary>Sets the shim of WebSocket.OnPingTimerCallback(Object state)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.Open">
            <summary>Sets the shim of WebSocket.Open()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OpenedAddEventHandler">
            <summary>Sets the shim of WebSocket.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OpenedRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OriginGet">
            <summary>Sets the shim of WebSocket.get_Origin()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.OriginSetString">
            <summary>Sets the shim of WebSocket.set_Origin(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ProtocolProcessorGet">
            <summary>Sets the shim of WebSocket.get_ProtocolProcessor()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ProtocolProcessorSetIProtocolProcessor">
            <summary>Sets the shim of WebSocket.set_ProtocolProcessor(IProtocolProcessor value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ProxyGet">
            <summary>Sets the shim of WebSocket.get_Proxy()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ProxySetIProxyConnector">
            <summary>Sets the shim of WebSocket.set_Proxy(IProxyConnector value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of WebSocket.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of WebSocket.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.ResolveUriStringInt32Int32Out">
            <summary>Sets the shim of WebSocket.ResolveUri(String uri, Int32 defaultPort, Int32&amp; port)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SendByteArrayInt32Int32">
            <summary>Sets the shim of WebSocket.Send(Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SendIListOfArraySegmentOfByte">
            <summary>Sets the shim of WebSocket.Send(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SendString">
            <summary>Sets the shim of WebSocket.Send(String message)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.StateCodeGet">
            <summary>Sets the shim of WebSocket.get_StateCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.StateGet">
            <summary>Sets the shim of WebSocket.get_State()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SubProtocolGet">
            <summary>Sets the shim of WebSocket.get_SubProtocol()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SubProtocolSetString">
            <summary>Sets the shim of WebSocket.set_SubProtocol(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.SupportBinaryGet">
            <summary>Sets the shim of WebSocket.get_SupportBinary()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.TargetUriGet">
            <summary>Sets the shim of WebSocket.get_TargetUri()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.TargetUriSetUri">
            <summary>Sets the shim of WebSocket.set_TargetUri(Uri value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.VersionGet">
            <summary>Sets the shim of WebSocket.get_Version()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.VersionSetWebSocketVersion">
            <summary>Sets the shim of WebSocket.set_Version(WebSocketVersion value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.client_ClosedObjectEventArgs">
            <summary>Sets the shim of WebSocket.client_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.client_ConnectedObjectEventArgs">
            <summary>Sets the shim of WebSocket.client_Connected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.client_DataReceivedObjectDataEventArgs">
            <summary>Sets the shim of WebSocket.client_DataReceived(Object sender, DataEventArgs e)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocket.AllInstances.client_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocket.client_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocketCommandInfo">
            <summary>Shim type of WebSocket4Net.WebSocketCommandInfo</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.#ctor(WebSocket4Net.WebSocketCommandInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.Bind(SuperSocket.ClientEngine.Protocol.ICommandInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.CloseStatusCodeGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_CloseStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.CloseStatusCodeSetInt16">
            <summary>Sets the shim of WebSocketCommandInfo.set_CloseStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.Constructor">
            <summary>Sets the shim of WebSocketCommandInfo.WebSocketCommandInfo()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.ConstructorIListOfWebSocketDataFrame">
            <summary>Sets the shim of WebSocketCommandInfo.WebSocketCommandInfo(IList`1&lt;WebSocketDataFrame&gt; frames)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.ConstructorString">
            <summary>Sets the shim of WebSocketCommandInfo.WebSocketCommandInfo(String key)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.ConstructorStringString">
            <summary>Sets the shim of WebSocketCommandInfo.WebSocketCommandInfo(String key, String text)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.ConstructorWebSocketDataFrame">
            <summary>Sets the shim of WebSocketCommandInfo.WebSocketCommandInfo(WebSocketDataFrame frame)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.DataGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Data()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.DataSetByteArray">
            <summary>Sets the shim of WebSocketCommandInfo.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.KeyGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Key()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.KeySetString">
            <summary>Sets the shim of WebSocketCommandInfo.set_Key(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.TextGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Text()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.TextSetString">
            <summary>Sets the shim of WebSocketCommandInfo.set_Text(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo._ctorb__0WebSocketDataFrame">
            <summary>Sets the shim of WebSocketCommandInfo.&lt;.ctor&gt;b__0(WebSocketDataFrame f)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.CloseStatusCodeGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_CloseStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.CloseStatusCodeSetInt16">
            <summary>Sets the shim of WebSocketCommandInfo.set_CloseStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.DataGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Data()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.DataSetByteArray">
            <summary>Sets the shim of WebSocketCommandInfo.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.KeyGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Key()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.KeySetString">
            <summary>Sets the shim of WebSocketCommandInfo.set_Key(String value)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.TextGet">
            <summary>Sets the shim of WebSocketCommandInfo.get_Text()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketCommandInfo.AllInstances.TextSetString">
            <summary>Sets the shim of WebSocketCommandInfo.set_Text(String value)</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocketContext">
            <summary>Shim type of WebSocket4Net.WebSocketContext</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketContext.#ctor(WebSocket4Net.WebSocketContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.ShimWebSocketContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.ShimWebSocketContext.Constructor">
            <summary>Sets the shim of WebSocketContext.WebSocketContext()</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.ShimWebSocketContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubClosedEventArgs">
            <summary>Stub type of WebSocket4Net.ClosedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubClosedEventArgs.#ctor(System.Int16,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubClosedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubClosedEventArgs</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubClosedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubClosedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubClosedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubDataReceivedEventArgs">
            <summary>Stub type of WebSocket4Net.DataReceivedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubDataReceivedEventArgs.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubDataReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDataReceivedEventArgs</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubDataReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubDataReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubDataReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubJsonWebSocket">
            <summary>Stub type of WebSocket4Net.JsonWebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(WebSocket4Net.WebSocket)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String,WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.#ctor(System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.DeserializeObject(System.String,System.Type)">
            <summary>Sets the stub of JsonWebSocket.DeserializeObject(String json, Type type)</summary>
        </member>
        <member name="F:WebSocket4Net.Fakes.StubJsonWebSocket.DeserializeObjectStringType">
            <summary>Sets the stub of JsonWebSocket.DeserializeObject(String json, Type type)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.Dispose(System.Boolean)">
            <summary>Sets the stub of JsonWebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:WebSocket4Net.Fakes.StubJsonWebSocket.DisposeBoolean">
            <summary>Sets the stub of JsonWebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.InitializeStub">
            <summary>Initializes a new instance of type StubJsonWebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubJsonWebSocket.SerializeObject(System.Object)">
            <summary>Sets the stub of JsonWebSocket.SerializeObject(Object target)</summary>
        </member>
        <member name="F:WebSocket4Net.Fakes.StubJsonWebSocket.SerializeObjectObject">
            <summary>Sets the stub of JsonWebSocket.SerializeObject(Object target)</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubJsonWebSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubJsonWebSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubJsonWebSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubMessageReceivedEventArgs">
            <summary>Stub type of WebSocket4Net.MessageReceivedEventArgs</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubMessageReceivedEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubMessageReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubMessageReceivedEventArgs</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubMessageReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubMessageReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubMessageReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubOpCode">
            <summary>Stub type of WebSocket4Net.OpCode</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubOpCode.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubOpCode.InitializeStub">
            <summary>Initializes a new instance of type StubOpCode</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubOpCode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubOpCode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubOpCode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubWebSocket">
            <summary>Stub type of WebSocket4Net.WebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocket.#ctor(System.String,System.String,WebSocket4Net.WebSocketVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocket.#ctor(System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,WebSocket4Net.WebSocketVersion,System.Net.EndPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocket.Dispose(System.Boolean)">
            <summary>Sets the stub of WebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:WebSocket4Net.Fakes.StubWebSocket.DisposeBoolean">
            <summary>Sets the stub of WebSocket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocket.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocket</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocket.OnHandshaked">
            <summary>Sets the stub of WebSocket.OnHandshaked()</summary>
        </member>
        <member name="F:WebSocket4Net.Fakes.StubWebSocket.OnHandshaked01">
            <summary>Sets the stub of WebSocket.OnHandshaked()</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubWebSocketCommandInfo">
            <summary>Stub type of WebSocket4Net.WebSocketCommandInfo</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.#ctor(WebSocket4Net.Protocol.WebSocketDataFrame)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.#ctor(System.Collections.Generic.IList{WebSocket4Net.Protocol.WebSocketDataFrame})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketCommandInfo.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketCommandInfo</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketCommandInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketCommandInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketCommandInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Fakes.StubWebSocketContext">
            <summary>Stub type of WebSocket4Net.WebSocketContext</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Fakes.StubWebSocketContext.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketContext</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Fakes.StubWebSocketContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10">
            <summary>Shim type of WebSocket4Net.Protocol.CloseStatusCodeHybi10</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.#ctor(WebSocket4Net.Protocol.CloseStatusCodeHybi10)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.Bind(WebSocket4Net.Protocol.ICloseStatusCode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.Constructor">
            <summary>Sets the shim of CloseStatusCodeHybi10.CloseStatusCodeHybi10()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ExtensionNotMatchGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ExtensionNotMatch()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ExtensionNotMatchSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ExtensionNotMatch(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.GoingAwayGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_GoingAway()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.GoingAwaySetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_GoingAway(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.InvalidUTF8Get">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_InvalidUTF8()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.InvalidUTF8SetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_InvalidUTF8(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NoStatusCodeGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NoStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NoStatusCodeSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NoStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NormalClosureGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NormalClosure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NormalClosureSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NormalClosure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NotAcceptableDataGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NotAcceptableData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.NotAcceptableDataSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NotAcceptableData(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ProtocolErrorGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ProtocolError()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ProtocolErrorSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ProtocolError(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.TLSHandshakeFailureGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.TLSHandshakeFailureSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_TLSHandshakeFailure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.TooLargeFrameGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_TooLargeFrame()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.TooLargeFrameSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_TooLargeFrame(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.UnexpectedConditionGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_UnexpectedCondition()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.UnexpectedConditionSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_UnexpectedCondition(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ViolatePolicyGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ViolatePolicy()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.ViolatePolicySetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ViolatePolicy(Int16 value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ExtensionNotMatchGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ExtensionNotMatch()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ExtensionNotMatchSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ExtensionNotMatch(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.GoingAwayGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_GoingAway()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.GoingAwaySetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_GoingAway(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.InvalidUTF8Get">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_InvalidUTF8()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.InvalidUTF8SetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_InvalidUTF8(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NoStatusCodeGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NoStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NoStatusCodeSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NoStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NormalClosureGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NormalClosure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NormalClosureSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NormalClosure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NotAcceptableDataGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_NotAcceptableData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.NotAcceptableDataSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_NotAcceptableData(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ProtocolErrorGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ProtocolError()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ProtocolErrorSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ProtocolError(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.TLSHandshakeFailureGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.TLSHandshakeFailureSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_TLSHandshakeFailure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.TooLargeFrameGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_TooLargeFrame()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.TooLargeFrameSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_TooLargeFrame(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.UnexpectedConditionGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_UnexpectedCondition()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.UnexpectedConditionSetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_UnexpectedCondition(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ViolatePolicyGet">
            <summary>Sets the shim of CloseStatusCodeHybi10.get_ViolatePolicy()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeHybi10.AllInstances.ViolatePolicySetInt16">
            <summary>Sets the shim of CloseStatusCodeHybi10.set_ViolatePolicy(Int16 value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455">
            <summary>Shim type of WebSocket4Net.Protocol.CloseStatusCodeRfc6455</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.#ctor(WebSocket4Net.Protocol.CloseStatusCodeRfc6455)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.Bind(WebSocket4Net.Protocol.ICloseStatusCode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.Constructor">
            <summary>Sets the shim of CloseStatusCodeRfc6455.CloseStatusCodeRfc6455()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ExtensionNotMatchGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ExtensionNotMatch()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ExtensionNotMatchSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ExtensionNotMatch(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.GoingAwayGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_GoingAway()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.GoingAwaySetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_GoingAway(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.InvalidUTF8Get">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_InvalidUTF8()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.InvalidUTF8SetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_InvalidUTF8(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NoStatusCodeGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NoStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NoStatusCodeSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NoStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NormalClosureGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NormalClosure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NormalClosureSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NormalClosure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NotAcceptableDataGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NotAcceptableData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.NotAcceptableDataSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NotAcceptableData(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ProtocolErrorGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ProtocolError()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ProtocolErrorSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ProtocolError(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.TLSHandshakeFailureGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.TLSHandshakeFailureSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_TLSHandshakeFailure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.TooLargeFrameGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_TooLargeFrame()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.TooLargeFrameSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_TooLargeFrame(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.UnexpectedConditionGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_UnexpectedCondition()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.UnexpectedConditionSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_UnexpectedCondition(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ViolatePolicyGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ViolatePolicy()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.ViolatePolicySetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ViolatePolicy(Int16 value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ExtensionNotMatchGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ExtensionNotMatch()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ExtensionNotMatchSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ExtensionNotMatch(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.GoingAwayGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_GoingAway()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.GoingAwaySetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_GoingAway(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.InvalidUTF8Get">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_InvalidUTF8()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.InvalidUTF8SetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_InvalidUTF8(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NoStatusCodeGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NoStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NoStatusCodeSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NoStatusCode(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NormalClosureGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NormalClosure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NormalClosureSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NormalClosure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NotAcceptableDataGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_NotAcceptableData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.NotAcceptableDataSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_NotAcceptableData(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ProtocolErrorGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ProtocolError()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ProtocolErrorSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ProtocolError(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.TLSHandshakeFailureGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.TLSHandshakeFailureSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_TLSHandshakeFailure(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.TooLargeFrameGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_TooLargeFrame()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.TooLargeFrameSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_TooLargeFrame(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.UnexpectedConditionGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_UnexpectedCondition()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.UnexpectedConditionSetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_UnexpectedCondition(Int16 value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ViolatePolicyGet">
            <summary>Sets the shim of CloseStatusCodeRfc6455.get_ViolatePolicy()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimCloseStatusCodeRfc6455.AllInstances.ViolatePolicySetInt16">
            <summary>Sets the shim of CloseStatusCodeRfc6455.set_ViolatePolicy(Int16 value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimReaderBase">
            <summary>Shim type of WebSocket4Net.Protocol.ReaderBase</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimReaderBase.#ctor(WebSocket4Net.Protocol.ReaderBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimReaderBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimReaderBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimReaderBase.Bind(SuperSocket.ClientEngine.Protocol.IClientCommandReader{WebSocket4Net.WebSocketCommandInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AddArraySegmentByteArrayInt32Int32">
            <summary>Sets the shim of ReaderBase.AddArraySegment(Byte[] buffer, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.BufferSegmentsGet">
            <summary>Sets the shim of ReaderBase.get_BufferSegments()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.ClearBufferSegments">
            <summary>Sets the shim of ReaderBase.ClearBufferSegments()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.ConstructorReaderBase">
            <summary>Sets the shim of ReaderBase.ReaderBase(ReaderBase previousCommandReader)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.ConstructorWebSocket">
            <summary>Sets the shim of ReaderBase.ReaderBase(WebSocket websocket)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.NextCommandReaderGet">
            <summary>Sets the shim of ReaderBase.get_NextCommandReader()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.NextCommandReaderSetIClientCommandReaderOfWebSocketCommandInfo">
            <summary>Sets the shim of ReaderBase.set_NextCommandReader(IClientCommandReader`1&lt;WebSocketCommandInfo&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.WebSocketGet">
            <summary>Sets the shim of ReaderBase.get_WebSocket()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.WebSocketSetWebSocket">
            <summary>Sets the shim of ReaderBase.set_WebSocket(WebSocket value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.AddArraySegmentByteArrayInt32Int32">
            <summary>Sets the shim of ReaderBase.AddArraySegment(Byte[] buffer, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.BufferSegmentsGet">
            <summary>Sets the shim of ReaderBase.get_BufferSegments()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.ClearBufferSegments">
            <summary>Sets the shim of ReaderBase.ClearBufferSegments()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.NextCommandReaderGet">
            <summary>Sets the shim of ReaderBase.get_NextCommandReader()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.NextCommandReaderSetIClientCommandReaderOfWebSocketCommandInfo">
            <summary>Sets the shim of ReaderBase.set_NextCommandReader(IClientCommandReader`1&lt;WebSocketCommandInfo&gt; value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.WebSocketGet">
            <summary>Sets the shim of ReaderBase.get_WebSocket()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimReaderBase.AllInstances.WebSocketSetWebSocket">
            <summary>Sets the shim of ReaderBase.set_WebSocket(WebSocket value)</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame">
            <summary>Shim type of WebSocket4Net.Protocol.WebSocketDataFrame</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.#ctor(WebSocket4Net.Protocol.WebSocketDataFrame)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ActualPayloadLengthGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ActualPayloadLength()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ApplicationDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ApplicationData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ApplicationDataSetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_ApplicationData(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.Clear">
            <summary>Sets the shim of WebSocketDataFrame.Clear()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ConstructorArraySegmentList">
            <summary>Sets the shim of WebSocketDataFrame.WebSocketDataFrame(ArraySegmentList data)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ExtensionDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ExtensionData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.ExtensionDataSetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_ExtensionData(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.FINGet">
            <summary>Sets the shim of WebSocketDataFrame.get_FIN()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.HasMaskGet">
            <summary>Sets the shim of WebSocketDataFrame.get_HasMask()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.InnerDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_InnerData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.LengthGet">
            <summary>Sets the shim of WebSocketDataFrame.get_Length()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.MaskKeyGet">
            <summary>Sets the shim of WebSocketDataFrame.get_MaskKey()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.MaskKeySetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_MaskKey(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.OpCodeGet">
            <summary>Sets the shim of WebSocketDataFrame.get_OpCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.PayloadLenghtGet">
            <summary>Sets the shim of WebSocketDataFrame.get_PayloadLenght()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.RSV1Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV1()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.RSV2Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV2()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.RSV3Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV3()</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.ActualPayloadLengthGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ActualPayloadLength()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.ApplicationDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ApplicationData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.ApplicationDataSetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_ApplicationData(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.Clear">
            <summary>Sets the shim of WebSocketDataFrame.Clear()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_ExtensionData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.ExtensionDataSetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_ExtensionData(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.FINGet">
            <summary>Sets the shim of WebSocketDataFrame.get_FIN()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.HasMaskGet">
            <summary>Sets the shim of WebSocketDataFrame.get_HasMask()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.InnerDataGet">
            <summary>Sets the shim of WebSocketDataFrame.get_InnerData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.LengthGet">
            <summary>Sets the shim of WebSocketDataFrame.get_Length()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.MaskKeyGet">
            <summary>Sets the shim of WebSocketDataFrame.get_MaskKey()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.MaskKeySetByteArray">
            <summary>Sets the shim of WebSocketDataFrame.set_MaskKey(Byte[] value)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.OpCodeGet">
            <summary>Sets the shim of WebSocketDataFrame.get_OpCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.PayloadLenghtGet">
            <summary>Sets the shim of WebSocketDataFrame.get_PayloadLenght()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.RSV1Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV1()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.RSV2Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV2()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.ShimWebSocketDataFrame.AllInstances.RSV3Get">
            <summary>Sets the shim of WebSocketDataFrame.get_RSV3()</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10">
            <summary>Stub type of WebSocket4Net.Protocol.CloseStatusCodeHybi10</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10.InitializeStub">
            <summary>Initializes a new instance of type StubCloseStatusCodeHybi10</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeHybi10.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455">
            <summary>Stub type of WebSocket4Net.Protocol.CloseStatusCodeRfc6455</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455.InitializeStub">
            <summary>Initializes a new instance of type StubCloseStatusCodeRfc6455</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubCloseStatusCodeRfc6455.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode">
            <summary>Stub type of WebSocket4Net.Protocol.ICloseStatusCode</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.#ctor">
            <summary>Initializes a new instance of type StubICloseStatusCode</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ExtensionNotMatchGet">
            <summary>Sets the stub of ICloseStatusCode.get_ExtensionNotMatch()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.GoingAwayGet">
            <summary>Sets the stub of ICloseStatusCode.get_GoingAway()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.InvalidUTF8Get">
            <summary>Sets the stub of ICloseStatusCode.get_InvalidUTF8()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.NoStatusCodeGet">
            <summary>Sets the stub of ICloseStatusCode.get_NoStatusCode()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.NormalClosureGet">
            <summary>Sets the stub of ICloseStatusCode.get_NormalClosure()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.NotAcceptableDataGet">
            <summary>Sets the stub of ICloseStatusCode.get_NotAcceptableData()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ProtocolErrorGet">
            <summary>Sets the stub of ICloseStatusCode.get_ProtocolError()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.TLSHandshakeFailureGet">
            <summary>Sets the stub of ICloseStatusCode.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.TooLargeFrameGet">
            <summary>Sets the stub of ICloseStatusCode.get_TooLargeFrame()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.UnexpectedConditionGet">
            <summary>Sets the stub of ICloseStatusCode.get_UnexpectedCondition()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ViolatePolicyGet">
            <summary>Sets the stub of ICloseStatusCode.get_ViolatePolicy()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#ExtensionNotMatch">
            <summary>Sets the stub of ICloseStatusCode.get_ExtensionNotMatch()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#GoingAway">
            <summary>Sets the stub of ICloseStatusCode.get_GoingAway()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#InvalidUTF8">
            <summary>Sets the stub of ICloseStatusCode.get_InvalidUTF8()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#NoStatusCode">
            <summary>Sets the stub of ICloseStatusCode.get_NoStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#NormalClosure">
            <summary>Sets the stub of ICloseStatusCode.get_NormalClosure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#NotAcceptableData">
            <summary>Sets the stub of ICloseStatusCode.get_NotAcceptableData()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#ProtocolError">
            <summary>Sets the stub of ICloseStatusCode.get_ProtocolError()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#TLSHandshakeFailure">
            <summary>Sets the stub of ICloseStatusCode.get_TLSHandshakeFailure()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#TooLargeFrame">
            <summary>Sets the stub of ICloseStatusCode.get_TooLargeFrame()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#UnexpectedCondition">
            <summary>Sets the stub of ICloseStatusCode.get_UnexpectedCondition()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubICloseStatusCode.ws4n::WebSocket4Net#Protocol#ICloseStatusCode#ViolatePolicy">
            <summary>Sets the stub of ICloseStatusCode.get_ViolatePolicy()</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor">
            <summary>Stub type of WebSocket4Net.Protocol.IProtocolProcessor</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.#ctor">
            <summary>Initializes a new instance of type StubIProtocolProcessor</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.CloseStatusCodeGet">
            <summary>Sets the stub of IProtocolProcessor.get_CloseStatusCode()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.CreateHandshakeReaderWebSocket">
            <summary>Sets the stub of IProtocolProcessor.CreateHandshakeReader(WebSocket websocket)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendCloseHandshakeWebSocketInt32String">
            <summary>Sets the stub of IProtocolProcessor.SendCloseHandshake(WebSocket websocket, Int32 statusCode, String closeReason)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendDataWebSocketByteArrayInt32Int32">
            <summary>Sets the stub of IProtocolProcessor.SendData(WebSocket websocket, Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendDataWebSocketIListOfArraySegmentOfByte">
            <summary>Sets the stub of IProtocolProcessor.SendData(WebSocket websocket, IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendHandshakeWebSocket">
            <summary>Sets the stub of IProtocolProcessor.SendHandshake(WebSocket websocket)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendMessageWebSocketString">
            <summary>Sets the stub of IProtocolProcessor.SendMessage(WebSocket websocket, String message)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendPingWebSocketString">
            <summary>Sets the stub of IProtocolProcessor.SendPing(WebSocket websocket, String ping)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SendPongWebSocketString">
            <summary>Sets the stub of IProtocolProcessor.SendPong(WebSocket websocket, String pong)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SupportBinaryGet">
            <summary>Sets the stub of IProtocolProcessor.get_SupportBinary()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.SupportPingPongGet">
            <summary>Sets the stub of IProtocolProcessor.get_SupportPingPong()</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.VerifyHandshakeWebSocketWebSocketCommandInfoStringOut">
            <summary>Sets the stub of IProtocolProcessor.VerifyHandshake(WebSocket websocket, WebSocketCommandInfo handshakeInfo, String&amp; description)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.VersionGet">
            <summary>Sets the stub of IProtocolProcessor.get_Version()</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#CreateHandshakeReader(WebSocket4Net.WebSocket)">
            <summary>Sets the stub of IProtocolProcessor.CreateHandshakeReader(WebSocket websocket)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendCloseHandshake(WebSocket4Net.WebSocket,System.Int32,System.String)">
            <summary>Sets the stub of IProtocolProcessor.SendCloseHandshake(WebSocket websocket, Int32 statusCode, String closeReason)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendData(WebSocket4Net.WebSocket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Sets the stub of IProtocolProcessor.SendData(WebSocket websocket, IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; segments)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendData(WebSocket4Net.WebSocket,System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IProtocolProcessor.SendData(WebSocket websocket, Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendHandshake(WebSocket4Net.WebSocket)">
            <summary>Sets the stub of IProtocolProcessor.SendHandshake(WebSocket websocket)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendMessage(WebSocket4Net.WebSocket,System.String)">
            <summary>Sets the stub of IProtocolProcessor.SendMessage(WebSocket websocket, String message)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendPing(WebSocket4Net.WebSocket,System.String)">
            <summary>Sets the stub of IProtocolProcessor.SendPing(WebSocket websocket, String ping)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SendPong(WebSocket4Net.WebSocket,System.String)">
            <summary>Sets the stub of IProtocolProcessor.SendPong(WebSocket websocket, String pong)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#VerifyHandshake(WebSocket4Net.WebSocket,WebSocket4Net.WebSocketCommandInfo,System.String@)">
            <summary>Sets the stub of IProtocolProcessor.VerifyHandshake(WebSocket websocket, WebSocketCommandInfo handshakeInfo, String&amp; description)</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#CloseStatusCode">
            <summary>Sets the stub of IProtocolProcessor.get_CloseStatusCode()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SupportBinary">
            <summary>Sets the stub of IProtocolProcessor.get_SupportBinary()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#SupportPingPong">
            <summary>Sets the stub of IProtocolProcessor.get_SupportPingPong()</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubIProtocolProcessor.ws4n::WebSocket4Net#Protocol#IProtocolProcessor#Version">
            <summary>Sets the stub of IProtocolProcessor.get_Version()</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubReaderBase">
            <summary>Stub type of WebSocket4Net.Protocol.ReaderBase</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubReaderBase.#ctor(WebSocket4Net.WebSocket)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubReaderBase.#ctor(WebSocket4Net.Protocol.ReaderBase)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubReaderBase.GetCommandInfo(System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>Sets the stub of ReaderBase.GetCommandInfo(Byte[] readBuffer, Int32 offset, Int32 length, Int32&amp; left)</summary>
        </member>
        <member name="F:WebSocket4Net.Protocol.Fakes.StubReaderBase.GetCommandInfoByteArrayInt32Int32Int32Out">
            <summary>Sets the stub of ReaderBase.GetCommandInfo(Byte[] readBuffer, Int32 offset, Int32 length, Int32&amp; left)</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubReaderBase.InitializeStub">
            <summary>Initializes a new instance of type StubReaderBase</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubReaderBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubReaderBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubReaderBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame">
            <summary>Stub type of WebSocket4Net.Protocol.WebSocketDataFrame</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame.#ctor(SuperSocket.ClientEngine.Protocol.ArraySegmentList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketDataFrame</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocket4Net.Protocol.Fakes.StubWebSocketDataFrame.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
